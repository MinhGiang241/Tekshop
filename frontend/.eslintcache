[{"D:\\New folder\\react project\\tekshop\\frontend\\src\\index.tsx":"1","D:\\New folder\\react project\\tekshop\\frontend\\src\\App.tsx":"2","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\configurationStore.ts":"3","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\reducers\\cartReducers.ts":"4","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\reducers\\productReducers.ts":"5","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\reducers\\orderReducers.ts":"6","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\reducers\\userReducers.ts":"7","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Footer.tsx":"8","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Theme.tsx":"9","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Header.tsx":"10","D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\SignUp.tsx":"11","D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\Product.tsx":"12","D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\Profile.tsx":"13","D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\OrderDetails.tsx":"14","D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\SignIn.tsx":"15","D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\Home.tsx":"16","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\constants\\cartConstants.ts":"17","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\constants\\userConstants.ts":"18","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\constants\\orderConstant.ts":"19","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\constants\\productConstant.ts":"20","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\actions\\cartActions.ts":"21","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\actions\\productActions.ts":"22","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\actions\\orderActions.ts":"23","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\actions\\userAction.ts":"24","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Rating.tsx":"25","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Modal.tsx":"26","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\FormContainer.tsx":"27","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Loading.tsx":"28","D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\Order.tsx":"29","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\ShippingForm.tsx":"30","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\UserOrders.tsx":"31","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Update.tsx":"32","D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\CartForm.tsx":"33","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\AddressForm.tsx":"34","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Review.tsx":"35","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\PaymentForm.tsx":"36","D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\Checkout.tsx":"37","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Step.tsx":"38","D:\\New folder\\react project\\tekshop\\frontend\\src\\PublicAndPrivateRoute.tsx":"39"},{"size":323,"mtime":1613483375786,"results":"40","hashOfConfig":"41"},{"size":3500,"mtime":1619288110438,"results":"42","hashOfConfig":"41"},{"size":1871,"mtime":1619166543100,"results":"43","hashOfConfig":"41"},{"size":1788,"mtime":1616022067967,"results":"44","hashOfConfig":"41"},{"size":2012,"mtime":1619234216525,"results":"45","hashOfConfig":"41"},{"size":2008,"mtime":1616087509283,"results":"46","hashOfConfig":"41"},{"size":1540,"mtime":1619172981288,"results":"47","hashOfConfig":"41"},{"size":2478,"mtime":1619258424224,"results":"48","hashOfConfig":"41"},{"size":3348,"mtime":1619275571204,"results":"49","hashOfConfig":"41"},{"size":9854,"mtime":1619290193399,"results":"50","hashOfConfig":"41"},{"size":10477,"mtime":1619258337159,"results":"51","hashOfConfig":"41"},{"size":13057,"mtime":1619290703562,"results":"52","hashOfConfig":"41"},{"size":1160,"mtime":1619145503289,"results":"53","hashOfConfig":"41"},{"size":3774,"mtime":1619258106697,"results":"54","hashOfConfig":"41"},{"size":7092,"mtime":1619257847707,"results":"55","hashOfConfig":"41"},{"size":8669,"mtime":1619290251379,"results":"56","hashOfConfig":"41"},{"size":737,"mtime":1615988715235,"results":"57","hashOfConfig":"41"},{"size":615,"mtime":1615299279202,"results":"58","hashOfConfig":"41"},{"size":812,"mtime":1616086766314,"results":"59","hashOfConfig":"41"},{"size":648,"mtime":1619166464598,"results":"60","hashOfConfig":"41"},{"size":3075,"mtime":1616056079891,"results":"61","hashOfConfig":"41"},{"size":1913,"mtime":1619232775632,"results":"62","hashOfConfig":"41"},{"size":3063,"mtime":1619077351803,"results":"63","hashOfConfig":"41"},{"size":2484,"mtime":1619172409354,"results":"64","hashOfConfig":"41"},{"size":2083,"mtime":1612488488004,"results":"65","hashOfConfig":"41"},{"size":1384,"mtime":1619259162753,"results":"66","hashOfConfig":"41"},{"size":702,"mtime":1616001727521,"results":"67","hashOfConfig":"41"},{"size":2565,"mtime":1619259761311,"results":"68","hashOfConfig":"41"},{"size":5114,"mtime":1616082106367,"results":"69","hashOfConfig":"41"},{"size":5858,"mtime":1616010937864,"results":"70","hashOfConfig":"41"},{"size":3891,"mtime":1619288425605,"results":"71","hashOfConfig":"41"},{"size":10804,"mtime":1619259394316,"results":"72","hashOfConfig":"41"},{"size":6024,"mtime":1619257899730,"results":"73","hashOfConfig":"41"},{"size":4072,"mtime":1619259781964,"results":"74","hashOfConfig":"41"},{"size":3333,"mtime":1619259277318,"results":"75","hashOfConfig":"41"},{"size":2481,"mtime":1619259223911,"results":"76","hashOfConfig":"41"},{"size":7770,"mtime":1619257946329,"results":"77","hashOfConfig":"41"},{"size":1869,"mtime":1616005810103,"results":"78","hashOfConfig":"41"},{"size":707,"mtime":1619288009705,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"9x48fe",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"143"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"82"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"82"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\New folder\\react project\\tekshop\\frontend\\src\\index.tsx",[],["174","175"],"D:\\New folder\\react project\\tekshop\\frontend\\src\\App.tsx",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\configurationStore.ts",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\reducers\\cartReducers.ts",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\reducers\\productReducers.ts",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\reducers\\orderReducers.ts",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\reducers\\userReducers.ts",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Footer.tsx",["176","177","178","179"],"import React from \"react\";\r\nimport { makeStyles, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport { IThemeOptions } from \"./Theme\";\r\nimport { Typography, Grid, Container, Link, Box } from \"@material-ui/core\";\r\n\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\n\r\nconst useStyles = makeStyles((theme: IThemeOptions) => ({\r\n  footer: {\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.common.green,\r\n  },\r\n  text: { color: theme.palette.common.white },\r\n}));\r\n\r\nconst footers = [\r\n  {\r\n    title: \"Company\",\r\n    description: [\"Team\", \"History\", \"Contact us\", \"Locations\"],\r\n  },\r\n  {\r\n    title: \"Features\",\r\n    description: [\r\n      \"Cool stuff\",\r\n      \"Random feature\",\r\n      \"Team feature\",\r\n      \"Developer stuff\",\r\n      \"Another one\",\r\n    ],\r\n  },\r\n  {\r\n    title: \"Resources\",\r\n    description: [\r\n      \"Resource\",\r\n      \"Resource name\",\r\n      \"Another resource\",\r\n      \"Final resource\",\r\n    ],\r\n  },\r\n  {\r\n    title: \"Legal\",\r\n    description: [\"Privacy policy\", \"Terms of use\"],\r\n  },\r\n];\r\n\r\nconst Footer: React.FC<any> = () => {\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    // @ts-ignore\r\n    <div style={{ width: \"100%\", backgroundColor: theme.palette.common.green }}>\r\n      <Container maxWidth=\"md\" component=\"footer\" className={classes.footer}>\r\n        <Grid container spacing={4} justify=\"space-evenly\">\r\n          {footers.map((footer: any) => (\r\n            <Grid item xs={6} sm={3} key={footer.title}>\r\n              <Typography variant=\"h6\" className={classes.text} gutterBottom>\r\n                {footer.title}\r\n              </Typography>\r\n              <ul>\r\n                {footer.description.map((item: any) => (\r\n                  <li key={item}>\r\n                    <Link href=\"#\" variant=\"subtitle1\" className={classes.text}>\r\n                      {item}\r\n                    </Link>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n        <Box mt={5}>\r\n          <Typography variant=\"body2\" className={classes.text} align=\"center\">\r\n            {\"Copyright © \"}\r\n            My Website\r\n            {new Date().getFullYear()}\r\n            {\".\"}\r\n          </Typography>\r\n        </Box>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Theme.tsx",["180"],"import { createMuiTheme, ThemeOptions, Theme } from \"@material-ui/core/styles\";\r\nimport { Palette } from \"@material-ui/core/styles/createPalette\";\r\nimport { TypographyOptions } from \"@material-ui/core/styles/createTypography\";\r\n\r\ninterface ITypography extends TypographyOptions {\r\n  body3: any;\r\n}\r\n\r\ninterface IPalette extends Palette {\r\n  common: {\r\n    green: string;\r\n    black: string;\r\n    white: string;\r\n    yellow: string;\r\n    grey: string;\r\n  };\r\n}\r\n\r\nexport interface IThemeOptions extends ThemeOptions {\r\n  palette: IPalette;\r\n  typography: ITypography;\r\n  overrides: any;\r\n  breakpoints: any;\r\n}\r\n\r\nconst greenColor = \"#09496e\";\r\nconst yellowColor = \"#dbc412\";\r\nconst greyColor = \"#e6e6e6\";\r\n\r\nlet theme = createMuiTheme({});\r\n\r\nexport default createMuiTheme({\r\n  overrides: {\r\n    MuiCssBaseline: {\r\n      \"@global\": {\r\n        \"*, *::before, *::after\": {\r\n          boxSizing: \"content-box\",\r\n        },\r\n        img: { display: \"bock\" },\r\n        a: {\r\n          textDecoration: \"none\",\r\n          color: greenColor,\r\n        },\r\n        ul: {\r\n          margin: 0,\r\n          padding: 0,\r\n          listStyle: \"none\",\r\n        },\r\n      },\r\n    },\r\n\r\n    MuiTypography: {\r\n      colorTextPrimary: { color: \"black\" },\r\n      colorTextSecondary: { color: \"white\" },\r\n    },\r\n    table: {\r\n      borderColor: \"grey\",\r\n    },\r\n    MuiContainer: {\r\n      root: {\r\n        backgroundColor: \"#fff\",\r\n      },\r\n    },\r\n    MuiFormLabel: {\r\n      root: {\r\n        color: theme.palette.common.black,\r\n      },\r\n    },\r\n    buttonWrapper: {\r\n      position: \"absolute\",\r\n      height: \"100% !important\",\r\n      backgroundColor: \"transparent\",\r\n      top: \"calc(50% - 70px)\",\r\n      \"&:hover\": {\r\n        \"& $button\": {\r\n          backgroundColor: \"black\",\r\n          filter: \"brightness(120%)\",\r\n          opacity: \"0.4\",\r\n        },\r\n      },\r\n    },\r\n    MuiListItem: {\r\n      divider: {\r\n        borderBottom: `1px solid ${greyColor}`,\r\n      },\r\n      root: {\r\n        \"&$selected\": {\r\n          backgroundColor: `rgba(0, 0, 0, 0)`,\r\n          \"&:hover\": {\r\n            backgroundColor: `rgba(0, 0, 0, 0)`,\r\n          },\r\n        },\r\n        button: {\r\n          \"&:hover\": {\r\n            backgroundColor: yellowColor,\r\n          },\r\n        },\r\n      },\r\n    },\r\n\r\n    MuiTab: {\r\n      textColorSecondary: { color: \"#fff\" },\r\n      root: {\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n          minWidth: 100,\r\n        },\r\n        color: \"#fff\",\r\n      },\r\n    },\r\n    MuiFilledInput: {\r\n      input: {\r\n        paddingTop: 10,\r\n        paddingLeft: 12,\r\n        paddingBottom: 10,\r\n      },\r\n    },\r\n    MuiTabs: { indicator: {} },\r\n    MuiToolbar: {\r\n      gutters: {\r\n        paddingLeft: 0,\r\n        paddingRight: 0,\r\n        [theme.breakpoints.up(\"sm\")]: { paddingLeft: 0, paddingRight: 0 },\r\n      },\r\n    },\r\n    MuiGridList: { root: { width: \"100%\" } },\r\n  },\r\n\r\n  palette: {\r\n    common: {\r\n      green: greenColor,\r\n      yellow: yellowColor,\r\n      grey: greyColor,\r\n    },\r\n    primary: {\r\n      main: greenColor,\r\n    },\r\n    secondary: {\r\n      main: yellowColor,\r\n    },\r\n  },\r\n  typography: {\r\n    body3: {\r\n      fontFamily: \"Roboto\" || \"Helvetica\" || \"Arial\" || \"sans-serif\",\r\n      fontWeight: 300,\r\n      fontSize: \"0.6rem\",\r\n      lineHeight: 1.2,\r\n      letterSpacing: \"0.008em\",\r\n    },\r\n  },\r\n} as IThemeOptions);\r\n","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Header.tsx",["181","182","183","184","185","186","187","188","189","190","191"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IThemeOptions } from \"./Theme\";\r\nimport { makeStyles, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Typography,\r\n  AppBar,\r\n  Toolbar,\r\n  useScrollTrigger,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  IconButton,\r\n  InputAdornment,\r\n  useMediaQuery,\r\n  Hidden,\r\n  SwipeableDrawer,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Tabs,\r\n  Tab,\r\n  Menu,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport { USER_LOGOUT } from \"../store/constants/userConstants\";\r\nimport logo from \"../assets/logo.png\";\r\nimport Modal from \"../components/Modal\";\r\ninterface Props {\r\n  window?: () => Window;\r\n  children?: React.ReactElement | any;\r\n}\r\n\r\nfunction ElevationScroll(props: Props) {\r\n  const { children, window } = props;\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 0,\r\n    target: window ? window() : undefined,\r\n  });\r\n\r\n  return React.cloneElement(children, {\r\n    elevation: trigger ? 4 : 0,\r\n  });\r\n}\r\n\r\nconst useStyles = makeStyles((theme: IThemeOptions) =>\r\n  createStyles({\r\n    toolBar: {},\r\n    logoContainer: {\r\n      marginLeft: \"2em\",\r\n    },\r\n    logo: {\r\n      maxHeight: \"3em\",\r\n    },\r\n    headerTab: {\r\n      maxWidth: \"7em\",\r\n      paddingLeft: 2,\r\n      paddingRight: 2,\r\n      \"& button\": { margin: \"auto\" },\r\n    },\r\n\r\n    list: {\r\n      display: \"flex\",\r\n      color: theme.palette.common.white,\r\n      width: \"100%\",\r\n      marginLeft: \"1em\",\r\n      marginRight: \"1em\",\r\n      [theme.breakpoints.down(\"md\")]: { marginLeft: 0 },\r\n    },\r\n    space: {\r\n      display: \"block\",\r\n      width: \"100%\",\r\n    },\r\n    search: { width: \"100%\", height: \"2.5em\" },\r\n    menu: {\r\n      marginLeft: 12,\r\n      fontSize: 40,\r\n      color: theme.palette.common.white,\r\n    },\r\n    drawer: {\r\n      minWidth: \"20em\",\r\n      backgroundColor: theme.palette.common.green,\r\n      borderBottom: `1px solid ${theme.palette.common.yellow}`,\r\n    },\r\n    drawItem: {\r\n      color: theme.palette.common.white,\r\n    },\r\n    headerText: {\r\n      color: theme.palette.common.white,\r\n      margin: \"auto\",\r\n      fontSize: 11,\r\n    },\r\n    active: {\r\n      backgroundColor: theme.palette.common.green,\r\n    },\r\n    link: {\r\n      textDecoration: \"none\",\r\n      color: \"inherit\",\r\n    },\r\n  })\r\n);\r\n\r\nconst Header: React.FC<any> = (props) => {\r\n  const theme = useTheme();\r\n  const { value, setValue, history, location } = props;\r\n  const iOS =\r\n    (process as any).browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\r\n  const matchesMD = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n  const matchesSM = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  const matchesXS = useMediaQuery(theme.breakpoints.down(\"xs\"));\r\n  const classes = useStyles();\r\n  const [openDrawer, setOpenDrawer] = useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state: any) => state.userLogin);\r\n\r\n  const {\r\n    loading = false,\r\n    error,\r\n    userInfo = JSON.parse(localStorage.getItem(\"userInfo\") as string),\r\n  } = userLogin;\r\n\r\n  const cart = useSelector((state: any) => state.cart.cartItem) || [];\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpenModal = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setOpen(false);\r\n    setValue(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    switch (window.location.pathname) {\r\n      case \"/\":\r\n        if (value !== 0) {\r\n          setValue(0);\r\n        }\r\n        break;\r\n      case \"/signin\":\r\n        if (value !== 1) {\r\n          setValue(1);\r\n        }\r\n        break;\r\n      case \"/signup\":\r\n        if (value !== 2) {\r\n          setValue(2);\r\n        }\r\n        break;\r\n      case \"/profile\":\r\n        if (value !== 3) {\r\n          setValue(3);\r\n        }\r\n        break;\r\n      case \"/cart\":\r\n        if (value !== 4) {\r\n          setValue(4);\r\n        }\r\n        break;\r\n      default:\r\n        setValue(0);\r\n        break;\r\n    }\r\n  }, [value, matchesSM, history]);\r\n\r\n  const handleChange = (e: React.ChangeEvent<any>, newValue: Number) => {\r\n    if (newValue === 5) {\r\n      setValue(0);\r\n      handleOpenModal();\r\n      dispatch({ type: USER_LOGOUT });\r\n    }\r\n    setOpenDrawer(false);\r\n    setValue(newValue);\r\n  };\r\n  const tabs = (\r\n    <Tabs\r\n      value={value}\r\n      onChange={handleChange}\r\n      indicatorColor=\"primary\"\r\n      textColor=\"secondary\"\r\n      centered\r\n    >\r\n      {!matchesMD && (\r\n        <Tab label=\"Trang Chủ\" component={Link} to=\"/\" value={0} />\r\n      )}\r\n      {!userInfo && (\r\n        <Tab label=\"Đăng nhập\" component={Link} to=\"/signin\" value={1} />\r\n      )}\r\n      {!userInfo && (\r\n        <Tab label=\"Đăng Ký\" component={Link} to=\"/signup\" value={2} />\r\n      )}\r\n      {userInfo && !matchesSM && (\r\n        <Tab label=\"Thông Tin\" component={Link} to=\"/profile\" value={3} />\r\n      )}\r\n      {userInfo && !matchesSM && (\r\n        <Tab label=\"Giỏ Hàng\" component={Link} to=\"/cart\" value={4} />\r\n      )}\r\n      {userInfo && <Tab label=\"Đăng xuất\" component={Link} to=\"/\" value={5} />}\r\n      {userInfo && (\r\n        <Hidden mdUp>\r\n          <ListItem\r\n            className={classes.headerTab}\r\n            style={{ marginLeft: matchesSM ? \"auto\" : undefined }}\r\n          >\r\n            <IconButton\r\n              style={{ color: theme.palette.common.white }}\r\n              onClick={handleClick}\r\n              aria-controls=\"profile-menu\"\r\n              aria-haspopup=\"true\"\r\n            >\r\n              <PersonIcon />\r\n              <Typography variant=\"body1\">{userInfo.name}</Typography>\r\n              <ArrowDropDownIcon />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"profile-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n            >\r\n              <MenuItem onClick={handleClose}>\r\n                <Link className={classes.link} to=\"/profile\">\r\n                  Hồ sơ\r\n                </Link>\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleClose();\r\n                }}\r\n              >\r\n                <Link className={classes.link} to=\"/cart\">\r\n                  Giỏ hàng\r\n                </Link>\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleClose();\r\n                  setOpen(true);\r\n                  dispatch({ type: USER_LOGOUT });\r\n                }}\r\n              >\r\n                <Link className={classes.link} to=\"/\">\r\n                  Đăng xuất\r\n                </Link>\r\n              </MenuItem>\r\n            </Menu>\r\n          </ListItem>\r\n        </Hidden>\r\n      )}\r\n    </Tabs>\r\n  );\r\n\r\n  const drawer = (\r\n    <SwipeableDrawer\r\n      disableBackdropTransition={!iOS}\r\n      disableDiscovery={iOS}\r\n      open={openDrawer}\r\n      onClose={() => setOpenDrawer(false)}\r\n      onOpen={() => setOpenDrawer(true)}\r\n      classes={{ paper: classes.drawer }}\r\n    >\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        indicatorColor=\"secondary\"\r\n        textColor=\"secondary\"\r\n        orientation=\"vertical\"\r\n      >\r\n        {<Tab label=\"Trang Chủ\" component={Link} to=\"/\" value={0} />}\r\n        {!userInfo && (\r\n          <Tab label=\"Đăng nhập\" component={Link} to=\"/signin\" value={1} />\r\n        )}\r\n        {!userInfo && (\r\n          <Tab label=\"Đăng Ký\" component={Link} to=\"/signup\" value={2} />\r\n        )}\r\n        {userInfo && (\r\n          <Tab label=\"Thông Tin\" component={Link} to=\"/profile\" value={3} />\r\n        )}\r\n        {userInfo && (\r\n          <Tab label=\"Giỏ Hàng\" component={Link} to=\"/cart\" value={4} />\r\n        )}\r\n      </Tabs>\r\n    </SwipeableDrawer>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <ElevationScroll {...props}>\r\n        <AppBar position=\"fixed\">\r\n          <Toolbar color=\"primary\" className={classes.toolBar}>\r\n            <Hidden smDown>\r\n              <Button\r\n                component={Link}\r\n                to=\"/\"\r\n                className={classes.logoContainer}\r\n                onClick={() => {\r\n                  setValue(0);\r\n                }}\r\n                disableRipple\r\n              >\r\n                <img alt=\"company logo\" src={logo} className={classes.logo} />\r\n              </Button>\r\n            </Hidden>\r\n            <Hidden mdUp>\r\n              <IconButton\r\n                onClick={() => setOpenDrawer((st) => !openDrawer)}\r\n                disableRipple\r\n              >\r\n                <MenuIcon className={classes.menu} />\r\n              </IconButton>\r\n            </Hidden>\r\n            <Grid\r\n              container\r\n              justify=\"flex-end\"\r\n              style={{\r\n                marginRight: !matchesMD ? theme.spacing(6) : theme.spacing(1),\r\n              }}\r\n            >\r\n              {tabs}\r\n            </Grid>\r\n          </Toolbar>\r\n          {drawer}\r\n        </AppBar>\r\n      </ElevationScroll>\r\n      <Modal\r\n        handleOpenModal={handleOpenModal}\r\n        handleCloseModal={handleCloseModal}\r\n        text={\"Bạn đã đăng xuất thành công\"}\r\n        open={open}\r\n      />\r\n      <div style={{ width: \"100%\", height: \"6em\" }} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\SignUp.tsx",["192","193"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Modal from \"../components/Modal\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { register, login } from \"../store/actions/userAction\";\r\nimport { USER_LOGOUT } from \"../store/constants/userConstants\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { InputAdornment, IconButton } from \"@material-ui/core/\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textPrimary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      My Website\r\n      {new Date().getFullYear()}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    border: `1px solid rgba(0,0,0,0.5)`,\r\n    boxShadow: \"10px 10px rgba(0,0,0,0.5)\",\r\n    borderRadius: \"10px\",\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    height: \"3rem\",\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: theme.palette.common.green,\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst SignUp: React.FC<any> = ({ history, setValue }) => {\r\n  const classes = useStyles();\r\n  const [name, setName] = useState(\"\");\r\n  const [nameHelpText, setNameHelpText] = useState(\"\");\r\n  const [nameError, setNameError] = useState(false);\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailHelpText, setEmailHelpText] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(false);\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordHelpText, setPasswordHelpText] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(false);\r\n\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [confirmPasswordError, setConfirmPasswordError] = useState(false);\r\n  const [confirmPasswordHelpText, setConfirmPasswordHelpText] = useState(\"\");\r\n\r\n  const [avatar, setAvatar] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const userRegister = useSelector((state: any) => state.userRegister);\r\n  let { loading = false, error, userInfo } = userRegister;\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpenModal = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setOpen(false);\r\n    setValue(0);\r\n    history.push(\"/signin\");\r\n  };\r\n\r\n  // @ts-ignore\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      setNameError(false);\r\n      setEmailError(false);\r\n      setPasswordError(false);\r\n      setConfirmPasswordError(false);\r\n      setOpen(true);\r\n    } else if (error) {\r\n      const { validationErrors } = error;\r\n      if (validationErrors) {\r\n        const nameDataError = validationErrors.find(\r\n          (i: any) => i.param === \"name\"\r\n        );\r\n        const emailDataError = validationErrors.find(\r\n          (i: any) => i.param === \"email\"\r\n        );\r\n        const passwordDataError = validationErrors.find(\r\n          (i: any) => i.param === \"password\"\r\n        );\r\n        const confirmPasswordDataError = validationErrors.find(\r\n          (i: any) => i.param === \"confirmPassword\"\r\n        );\r\n        if (nameDataError) {\r\n          setNameError(true);\r\n          setNameHelpText(nameDataError.msg);\r\n        } else {\r\n          setEmailError(false);\r\n        }\r\n        if (emailDataError) {\r\n          setEmailError(true);\r\n          setEmailHelpText(emailDataError.msg);\r\n        } else {\r\n          setEmailError(false);\r\n        }\r\n        if (passwordDataError) {\r\n          setPasswordError(true);\r\n          setPasswordHelpText(passwordDataError.msg);\r\n        } else {\r\n          setPasswordError(false);\r\n        }\r\n        if (confirmPasswordDataError) {\r\n          setConfirmPasswordError(true);\r\n          setConfirmPasswordHelpText(confirmPasswordDataError.msg);\r\n        } else {\r\n          setConfirmPasswordError(false);\r\n        }\r\n      }\r\n    }\r\n    return dispatch({ type: USER_LOGOUT });\r\n  }, [userInfo, error, dispatch]);\r\n\r\n  const submitHandle = async (e: any) => {\r\n    e.preventDefault();\r\n    dispatch(register(name, email, password, confirmPassword, avatar));\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\" className={classes.root}>\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          ĐĂNG KÝ\r\n        </Typography>\r\n        <form onSubmit={submitHandle} noValidate className={classes.form}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                error={nameError}\r\n                helperText={nameHelpText}\r\n                value={name}\r\n                onChange={(e: any) => setName(e.target.value)}\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"name\"\r\n                label=\"Tên\"\r\n                name=\"name\"\r\n                autoComplete=\"name\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                error={emailError}\r\n                helperText={emailHelpText}\r\n                value={email}\r\n                onChange={(e: any) => setEmail(e.target.value)}\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                error={passwordError}\r\n                helperText={passwordHelpText}\r\n                value={password}\r\n                onChange={(e: any) => setPassword(e.target.value)}\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"password\"\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                autoComplete=\"password\"\r\n                InputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        onMouseDown={() => setShowPassword(!showPassword)}\r\n                        onMouseUp={() => setShowPassword(!showPassword)}\r\n                        edge=\"end\"\r\n                      >\r\n                        {showPassword ? (\r\n                          <VisibilityIcon />\r\n                        ) : (\r\n                          <VisibilityOffIcon />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                error={confirmPasswordError}\r\n                helperText={confirmPasswordHelpText}\r\n                value={confirmPassword}\r\n                onChange={(e: any) => setConfirmPassword(e.target.value)}\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"confirm-password\"\r\n                label=\"Nhập lại Password\"\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                id=\"confirm-password\"\r\n                autoComplete=\"confirm-password\"\r\n                InputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        onMouseDown={() => setShowPassword(!showPassword)}\r\n                        onMouseUp={() => setShowPassword(!showPassword)}\r\n                        edge=\"end\"\r\n                      >\r\n                        {showPassword ? (\r\n                          <VisibilityIcon />\r\n                        ) : (\r\n                          <VisibilityOffIcon />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"Nhận thông tin, quảng cáo qua email.\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            disabled={loading}\r\n          >\r\n            ĐĂNG KÝ\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link to=\"/signin\" className={classes.link}>\r\n                Đã có tài khoản? Đăng nhập\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n      <Modal\r\n        handleOpenModal={handleOpenModal}\r\n        handleCloseModal={handleCloseModal}\r\n        text={\"Bạn đã đăng ký thành công, có 1 email đã được gửi cho bạn\"}\r\n        open={open}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\Product.tsx",["194","195","196","197"],"D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\Profile.tsx",["198","199","200","201","202","203","204","205"],"import React from \"react\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { makeStyles, Theme, useTheme } from \"@material-ui/core/styles\";\r\nimport UserProfile from \"../components/Update\";\r\nimport Shipping from \"../components/ShippingForm\";\r\nimport UserOrders from \"../components/UserOrders\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport {\r\n  AppBar,\r\n  Tabs,\r\n  Tab,\r\n  Typography,\r\n  Box,\r\n  Container,\r\n} from \"@material-ui/core/\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    height: \"100%\",\r\n    border: `1px solid rgba(0,0,0,0.5)`,\r\n    boxShadow: \"10px 10px rgba(0,0,0,0.5)\",\r\n    borderRadius: \"10px\",\r\n    paddingTop: \"10px\",\r\n  },\r\n}));\r\n\r\nconst Profile: React.FC<any> = ({ value, setValue }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" className={classes.root}>\r\n      <Grid container>\r\n        <Grid item lg={4} md={12}>\r\n          <UserProfile />\r\n        </Grid>\r\n        <Grid item lg={8} md={12}>\r\n          <UserOrders />\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\OrderDetails.tsx",["206","207","208"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport numeral from \"numeral\";\r\n\r\nimport {\r\n  List,\r\n  Grid,\r\n  ListItemText,\r\n  ListItem,\r\n  Typography,\r\n  Container,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  listItem: {\r\n    padding: theme.spacing(1, 0),\r\n  },\r\n  total: {\r\n    fontWeight: 700,\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst OrderDetails: React.FC<any> = ({ match, location, history }) => {\r\n  const classes = useStyles();\r\n  const orders = useSelector((state: any) => state.orderList.order);\r\n  const orderId = match.params.id;\r\n  const order = orders.find((i: any) => i._id === orderId);\r\n  const userLogin = useSelector((state: any) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const {\r\n    orderItems,\r\n    shippingAddress,\r\n    paymentMethod,\r\n    totalPrice,\r\n    nameOrder,\r\n  } = order;\r\n  const { province, district, ward, address, phone } = shippingAddress;\r\n  const { visa, method } = paymentMethod;\r\n  const { nameCard, cardNumber, expire, cvv } = visa;\r\n  console.log(orderItems);\r\n  const payments = [\r\n    { name: \"Card type\", detail: \"Visa\" },\r\n    { name: \"Card holder\", detail: nameCard },\r\n    { name: \"Phone\", detail: phone },\r\n    { name: \"Card number\", detail: cardNumber },\r\n    { name: \"Expiry date\", detail: expire },\r\n  ];\r\n\r\n  const addresses = [address, ward, district, province];\r\n  return (\r\n    <Container\r\n      maxWidth=\"sm\"\r\n      style={{\r\n        border: `1px solid rgba(0,0,0,0.5)`,\r\n        boxShadow: \"10px 10px rgba(0,0,0,0.5)\",\r\n        borderRadius: \"10px\",\r\n      }}\r\n    >\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Order summary\r\n      </Typography>\r\n      <List disablePadding>\r\n        {orderItems.map((product: any) => (\r\n          <ListItem className={classes.listItem} key={product.name}>\r\n            <ListItemText primary={product.name} />\r\n            <Typography variant=\"body2\">\r\n              {product.price}đ x {product.quantity} ={\" \"}\r\n              {numeral(\r\n                Number(product.price.replaceAll(\".\", \"\")) *\r\n                  Number(product.quantity)\r\n              )\r\n                .format(\"0,0\")\r\n                .replaceAll(\",\", \".\")}\r\n              đ\r\n            </Typography>\r\n          </ListItem>\r\n        ))}\r\n        <ListItem className={classes.listItem}>\r\n          <ListItemText primary=\"Total\" />\r\n          <Typography variant=\"subtitle1\" className={classes.total}>\r\n            {numeral(totalPrice).format(\"0,0\").replaceAll(\",\", \".\")}đ\r\n          </Typography>\r\n        </ListItem>\r\n      </List>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n            Shipping\r\n          </Typography>\r\n          <Typography gutterBottom>{nameOrder}</Typography>\r\n          <Typography gutterBottom>{addresses.join(\", \")}</Typography>\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={12} sm={6}>\r\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n            Payment details\r\n          </Typography>\r\n          <Grid container>\r\n            {payments.map((payment) => (\r\n              <React.Fragment key={payment.name}>\r\n                <Grid item xs={6}>\r\n                  <Typography gutterBottom>{payment.name}</Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Typography gutterBottom>{payment.detail}</Typography>\r\n                </Grid>\r\n              </React.Fragment>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default OrderDetails;\r\n","D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\SignIn.tsx",["209","210"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Modal from \"../components/Modal\";\r\nimport { login } from \"../store/actions/userAction\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { InputAdornment, IconButton } from \"@material-ui/core/\";\r\nimport { getCart } from \"../store/actions/cartActions\";\r\nimport { getOrderList } from \"../store/actions/orderActions\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textPrimary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      My Website {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  root: {\r\n    border: `1px solid rgba(0,0,0,0.5)`,\r\n    boxShadow: \"10px 10px rgba(0,0,0,0.5)\",\r\n    borderRadius: \"10px\",\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    height: \"3rem\",\r\n  },\r\n  error: { color: \"red\" },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: theme.palette.common.green,\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst SignIn: React.FC<any> = ({ history, setValue }) => {\r\n  const classes = useStyles();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(false);\r\n  const [emailHelpText, setEmailHelpText] = useState(\"\");\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordHelpText, setPasswordHelpText] = useState(\"\");\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [passwordError, setPasswordError] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state: any) => state.userLogin);\r\n  const {\r\n    loading = false,\r\n    error,\r\n    userInfo = JSON.parse(localStorage.getItem(\"userInfo\") as string),\r\n  } = userLogin;\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpenModal = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setOpen(false);\r\n    setValue(0);\r\n    history.push(\"/\");\r\n    dispatch(getCart(userInfo.token));\r\n    dispatch(getOrderList(userInfo.token));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      setEmailError(false);\r\n      setPasswordError(false);\r\n      setOpen(true);\r\n    } else if (error) {\r\n      const { validationErrors } = error;\r\n      if (validationErrors) {\r\n        const emailDataError = validationErrors.find(\r\n          (i: any) => i.param === \"email\"\r\n        );\r\n        const passwordDataError = validationErrors.find(\r\n          (i: any) => i.param === \"password\"\r\n        );\r\n\r\n        if (emailDataError) {\r\n          setEmailError(true);\r\n          setEmailHelpText(emailDataError.msg);\r\n        } else {\r\n          setEmailError(false);\r\n        }\r\n        if (passwordDataError) {\r\n          setPasswordError(true);\r\n          setPasswordHelpText(passwordDataError.msg);\r\n        } else {\r\n          setPasswordError(false);\r\n        }\r\n      }\r\n    }\r\n  }, [userInfo, error]);\r\n\r\n  const submitHandle = async (e: any) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\" className={classes.root}>\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          ĐĂNG NHẬP\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={submitHandle}>\r\n          <TextField\r\n            error={emailError}\r\n            helperText={emailHelpText}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value={email}\r\n            onChange={(e: any) => setEmail(e.target.value)}\r\n          />\r\n\r\n          <TextField\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onMouseDown={() => setShowPassword(!showPassword)}\r\n                    onMouseUp={() => setShowPassword(!showPassword)}\r\n                    edge=\"end\"\r\n                  >\r\n                    {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            error={passwordError}\r\n            helperText={passwordHelpText}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={password}\r\n            onChange={(e: any) => setPassword(e.target.value)}\r\n          />\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            disabled={loading}\r\n          >\r\n            Đăng nhập\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link to=\"#\" className={classes.link}>\r\n                Quên mật khẩu?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link to=\"/signup\" className={classes.link}>\r\n                {\"Chưa có tài khoản? Đăng ký\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n      <Modal\r\n        handleOpenModal={handleOpenModal}\r\n        handleCloseModal={handleCloseModal}\r\n        text={\"Bạn đã đăng nhập thành công\"}\r\n        open={open}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\Home.tsx",["211","212","213"],"D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\constants\\cartConstants.ts",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\constants\\userConstants.ts",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\constants\\orderConstant.ts",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\constants\\productConstant.ts",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\actions\\cartActions.ts",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\actions\\productActions.ts",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\actions\\orderActions.ts",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\actions\\userAction.ts",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Rating.tsx",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Modal.tsx",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\FormContainer.tsx",["214"],"import React from \"react\";\r\nimport { makeStyles, useTheme, Grid } from \"@material-ui/core\";\r\nimport { IThemeOptions } from \"../components/Theme\";\r\n\r\nconst useStyles = makeStyles((theme: IThemeOptions) => ({\r\n  container: {\r\n    backgroundColor: theme.palette.common.white,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    maxWidth: 1000,\r\n    border: `1px solid rgba(0,0,0,0.5)`,\r\n    boxShadow: \"10px 10px rgba(0,0,0,0.5)\",\r\n    borderRadius: \"10px\",\r\n  },\r\n}));\r\n\r\nconst FormContainer = ({ children }: any) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid className={classes.container}>\r\n      <Grid item>{children}</Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n",["215","216"],"D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Loading.tsx",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\Order.tsx",["217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loading from \"../components/Loading\";\r\nimport { makeStyles, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport { useMediaQuery } from \"@material-ui/core\";\r\nimport { IThemeOptions } from \"../components/Theme\";\r\nimport { createOrder, getOrderDetail } from \"../store/actions/orderActions\";\r\nimport numeral from \"numeral\";\r\n\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Input,\r\n  FormHelperText,\r\n  InputAdornment,\r\n  IconButton,\r\n  Typography,\r\n  Select,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: IThemeOptions) => ({\r\n  container: {\r\n    marginLeft: \"3rem\",\r\n    marginRight: \"3rem\",\r\n    marginTop: 16,\r\n    marginBottom: \"2rem\",\r\n    minWidth: 700,\r\n  },\r\n  infoContainer: {\r\n    minHeight: \"70px\",\r\n    borderBottom: \"1px solid rgba(0,0,0,0.15)\",\r\n  },\r\n  cartItem: {\r\n    height: 40,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-around\",\r\n    border: \"2px solid rgba(0,0,0,0.15)\",\r\n    borderRadius: 5,\r\n    // boxShadow: \"2px 2px rgba(0,0,0,0.15)\",\r\n    marginBottom: 2,\r\n  },\r\n  totalPrice: {\r\n    marginTop: \"1rem\",\r\n    marginBottom: \"1rem\",\r\n  },\r\n}));\r\n\r\nconst OrderScreen = ({\r\n  handleReset,\r\n  handleBack,\r\n  handleCreateOrder,\r\n  total,\r\n  province,\r\n  district,\r\n  ward,\r\n  street,\r\n  phone,\r\n  paymentMethod,\r\n  cartItems,\r\n}: any) => {\r\n  // const orderId = match.param.id;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n  const matchesXS = useMediaQuery(theme.breakpoints.down(\"xs\"));\r\n\r\n  const orderDetails = useSelector((state: any) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  return (\r\n    <Grid className={classes.container}>\r\n      <Grid container justify=\"center\">\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          ĐƠN HÀNG\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Grid item direction=\"column\" className={classes.infoContainer}>\r\n          <Grid item>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              ĐỊA CHỈ GIAO HÀNG :\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"body1\">\r\n              {street}, {ward}, {district}, {province}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          container\r\n          direction=\"column\"\r\n          className={classes.infoContainer}\r\n        >\r\n          <Grid item>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              SỐ ĐIỆN THOẠI :\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"body1\">{phone}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          container\r\n          direction=\"column\"\r\n          className={classes.infoContainer}\r\n        >\r\n          <Grid item>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              PHƯƠNG THỨC THANH TOÁN :\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"body1\">{paymentMethod}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          container\r\n          direction=\"column\"\r\n          className={classes.infoContainer}\r\n        >\r\n          <Grid\r\n            item\r\n            style={{\r\n              marginBottom: 20,\r\n            }}\r\n          >\r\n            <Typography variant=\"h6\">VẬT PHẨM :</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            {cartItems.map((i: any) => (\r\n              <div key={i.name} className={classes.cartItem}>\r\n                <img height={40} src={i.image} alt={i.name} />\r\n                <Typography variant=\"body1\">{i.name}</Typography>\r\n                <Typography variant=\"body1\">\r\n                  {i.quantity}X {i.price}đ ={\" \"}\r\n                  {numeral(\r\n                    Number(i.quantity) * Number(i.price.replace(/[.]/g, \"\"))\r\n                  ).format(\"0,0\")}\r\n                  đ\r\n                </Typography>\r\n              </div>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container>\r\n        <Grid item container justify=\"center\" className={classes.totalPrice}>\r\n          <Typography variant=\"h6\">\r\n            TỔNG CỘNG : {numeral(total).format(\"0,0\")}đ\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container justify=\"center\">\r\n        <Button variant=\"contained\" onClick={handleReset}>\r\n          Giỏ hàng\r\n        </Button>\r\n        <Button\r\n          style={{ margin: \"0 10px\" }}\r\n          variant=\"contained\"\r\n          onClick={handleBack}\r\n        >\r\n          Quay lại\r\n        </Button>\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={handleCreateOrder}\r\n        >\r\n          Đặt hàng\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\ShippingForm.tsx",["236","237","238","239","240"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loading from \"../components/Loading\";\r\nimport { makeStyles, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport { IThemeOptions } from \"../components/Theme\";\r\n\r\nimport {\r\n  Grid,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Input,\r\n  FormHelperText,\r\n  Typography,\r\n  Select,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: IThemeOptions) => ({\r\n  input: { width: 400, marginBottom: \"1.3rem\" },\r\n}));\r\n\r\nconst Shipping = ({\r\n  token,\r\n  province,\r\n  setProvince,\r\n  district,\r\n  setDistrict,\r\n  ward,\r\n  setWard,\r\n  street,\r\n  setStreet,\r\n  phone,\r\n  setPhone,\r\n  paymentMethod,\r\n  setPaymentMethod,\r\n  handleNext,\r\n  handleBack,\r\n  handleReset,\r\n}: any) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {}, [dispatch]);\r\n\r\n  return (\r\n    <Grid container style={{ marginBottom: \"1rem\", maxWidth: 700 }}>\r\n      <Grid\r\n        item\r\n        container\r\n        justify=\"center\"\r\n        style={{ marginTop: \"1rem\", marginBottom: \"1rem\" }}\r\n      >\r\n        <Typography variant=\"h4\">ĐỊA CHỈ GIAO HÀNG</Typography>\r\n      </Grid>\r\n      <Grid item container justify=\"center\">\r\n        <FormControl className={classes.input}>\r\n          <InputLabel htmlFor=\"province\">Tỉnh/TP </InputLabel>\r\n          <Input\r\n            id=\"province\"\r\n            aria-describedby=\"province\"\r\n            type=\"text\"\r\n            value={province}\r\n            error={province === \"\"}\r\n            onChange={(e: any) => setProvince(e.target.value)}\r\n          />\r\n          {province === \"\" && (\r\n            <FormHelperText style={{ color: \"red\" }} id=\"province-helper-text\">\r\n              Không được để trống\r\n            </FormHelperText>\r\n          )}\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item container justify=\"center\">\r\n        <FormControl className={classes.input}>\r\n          <InputLabel htmlFor=\"district\">Quận/huyện </InputLabel>\r\n          <Input\r\n            id=\"district\"\r\n            aria-describedby=\"district\"\r\n            type=\"text\"\r\n            value={district}\r\n            error={district === \"\"}\r\n            onChange={(e: any) => setDistrict(e.target.value)}\r\n          />\r\n          {district === \"\" && (\r\n            <FormHelperText style={{ color: \"red\" }} id=\"province-helper-text\">\r\n              Không được để trống\r\n            </FormHelperText>\r\n          )}\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item container justify=\"center\">\r\n        <FormControl className={classes.input}>\r\n          <InputLabel htmlFor=\"ward\">Xã/phường </InputLabel>\r\n          <Input\r\n            id=\"ward\"\r\n            aria-describedby=\"ward\"\r\n            type=\"text\"\r\n            value={ward}\r\n            error={ward === \"\"}\r\n            onChange={(e: any) => setWard(e.target.value)}\r\n          />\r\n          {ward === \"\" && (\r\n            <FormHelperText style={{ color: \"red\" }} id=\"ward-helper-text\">\r\n              Không được để trống\r\n            </FormHelperText>\r\n          )}\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item container justify=\"center\">\r\n        <FormControl className={classes.input}>\r\n          <InputLabel htmlFor=\"street\">Số nhà/Tên đường </InputLabel>\r\n          <Input\r\n            id=\"street\"\r\n            aria-describedby=\"street\"\r\n            type=\"text\"\r\n            value={street}\r\n            error={street === \"\"}\r\n            onChange={(e: any) => setStreet(e.target.value)}\r\n          />\r\n          {street === \"\" && (\r\n            <FormHelperText style={{ color: \"red\" }} id=\"street-helper-text\">\r\n              Không được để trống\r\n            </FormHelperText>\r\n          )}\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item container justify=\"center\">\r\n        <FormControl className={classes.input}>\r\n          <InputLabel htmlFor=\"phone\">Số điện thoại </InputLabel>\r\n          <Input\r\n            id=\"phone\"\r\n            aria-describedby=\"phone\"\r\n            type=\"text\"\r\n            value={phone}\r\n            error={phone === \"\"}\r\n            onChange={(e: any) => setPhone(e.target.value)}\r\n          />\r\n          {phone === \"\" && (\r\n            <FormHelperText style={{ color: \"red\" }} id=\"phone-helper-text\">\r\n              Không được để trống\r\n            </FormHelperText>\r\n          )}\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        container\r\n        justify=\"space-between\"\r\n        style={{ marginBottom: \"1rem\" }}\r\n      >\r\n        <Grid item style={{ marginLeft: \"calc(50% - 200px)\" }}>\r\n          <Typography variant=\"body1\">Thanh toán:</Typography>\r\n        </Grid>\r\n        <Grid item style={{ marginRight: \"calc(50% - 200px)\" }}>\r\n          <FormControl\r\n            component={Select}\r\n            value={paymentMethod}\r\n            onChange={(e: any) => setPaymentMethod(e.target.value)}\r\n          >\r\n            <option selected value=\"Thanh toán khi nhận hàng\">\r\n              Thanh toán khi nhận hàng\r\n            </option>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item container justify=\"center\">\r\n        <Button\r\n          style={{ marginRight: \"10px\" }}\r\n          variant=\"contained\"\r\n          onClick={handleBack}\r\n        >\r\n          Quay lại\r\n        </Button>\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disabled={\r\n            province === \"\" ||\r\n            district === \"\" ||\r\n            ward === \"\" ||\r\n            street === \"\" ||\r\n            phone === \"\"\r\n          }\r\n          onClick={handleNext}\r\n        >\r\n          Tiếp tục\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Shipping;\r\n",["241","242"],"D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\UserOrders.tsx",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Update.tsx",["243","244","245","246"],"import React, { useState, useEffect, useRef, useLayoutEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loading from \"../components/Loading\";\r\nimport { makeStyles, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport { IThemeOptions } from \"../components/Theme\";\r\nimport Resizer from \"react-image-file-resizer\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  InputLabel,\r\n  Input,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TableRow,\r\n  TableCell,\r\n} from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport PhotoCameraIcon from \"@material-ui/icons/PhotoCamera\";\r\nimport { updateProfile } from \"../store/actions/userAction\";\r\n\r\nconst useStyles = makeStyles((theme: IThemeOptions) => ({\r\n  inputEdit: { width: \"100%\", height: \"100%\" },\r\n  editButtonWrap: {\r\n    marginLeft: \"auto\",\r\n    padding: \"0\",\r\n  },\r\n  avatar: {\r\n    position: \"relative\",\r\n    \"&:hover\": {\r\n      \"& $upload\": { display: \"flex\" },\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  tableRow: {},\r\n  tableCell: { maxHeight: \"20px\", padding: \"8px\" },\r\n  tableCellContent: {\r\n    maxWidth: \"180px\",\r\n    minWidth: \"180px\",\r\n    padding: \"0px\",\r\n  },\r\n  upload: {\r\n    display: \"none\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    width: 200,\r\n    height: 200,\r\n    background: \"rgba(0,0,0,0.5)\",\r\n    cursor: \"pointer\",\r\n  },\r\n  uploadIcon: {\r\n    margin: \"auto\",\r\n    color: theme.palette.common.white,\r\n    fontSize: 60,\r\n  },\r\n}));\r\n\r\nconst Profile = ({ match, location, history, children, setValue }: any) => {\r\n  const {\r\n    userInfo = JSON.parse(localStorage.getItem(\"userInfo\") as string),\r\n    error,\r\n    loading,\r\n  } = useSelector((state: any) => state.userLogin);\r\n  const dispatch = useDispatch();\r\n  const { name, email, avatar } = userInfo;\r\n  let errorMessage;\r\n  if (error) {\r\n    errorMessage = error.error;\r\n  }\r\n\r\n  const dataAvatar = new TextDecoder().decode(new Uint8Array(avatar.data));\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n  const [editName, setEditName] = useState(false);\r\n  const [editEmail, setEditEmail] = useState(false);\r\n  const [editPassword, setEditPassword] = useState(false);\r\n  const [updatedName, setUpdatedName] = useState(name);\r\n  const [updatedEmail, setUpdatedEmail] = useState(email);\r\n  const [updatedAvatar, setUpdatedAvatar] = useState(\"\");\r\n  const [updatedPassword, setUpdatedPassword] = useState(\"\");\r\n  console.log(updatedAvatar, \"updatedAvatar\");\r\n\r\n  const resizeFile = (file: any) =>\r\n    new Promise((resolve) => {\r\n      Resizer.imageFileResizer(\r\n        file,\r\n        100,\r\n        100,\r\n        \"PNG\",\r\n        100,\r\n        0,\r\n        (uri) => {\r\n          resolve(uri);\r\n        },\r\n        \"base64\"\r\n      );\r\n    });\r\n\r\n  const handleChangeFile = async (e: any) => {\r\n    try {\r\n      const file = e.target.files[0];\r\n\r\n      const image = (await resizeFile(file)) as string;\r\n      setUpdatedAvatar(image);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const firstUpdate = useRef(true);\r\n\r\n  useLayoutEffect(() => {\r\n    if (firstUpdate.current) {\r\n      firstUpdate.current = false;\r\n      return;\r\n    }\r\n    submitHandle();\r\n  }, [updatedAvatar]);\r\n\r\n  const submitHandle = () => {\r\n    dispatch(\r\n      updateProfile(\r\n        updatedAvatar === \"\" ? undefined : updatedAvatar,\r\n        updatedName,\r\n        updatedEmail,\r\n        updatedPassword === \"\" ? \"*****\" : updatedPassword,\r\n        userInfo.token\r\n      )\r\n    );\r\n\r\n    setEditName(false);\r\n    setEditEmail(false);\r\n    setEditPassword(false);\r\n    setUpdatedPassword(\"\");\r\n  };\r\n  return (\r\n    <Grid\r\n      container\r\n      justify=\"center\"\r\n      style={{ backgroundColor: \"transparent\", paddingBottom: \"30px\" }}\r\n    >\r\n      <Grid container justify=\"center\">\r\n        <Grid container item>\r\n          {loading ? (\r\n            <Grid\r\n              container\r\n              style={{ height: 500 }}\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <Loading />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <>\r\n              <Grid item container>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  gutterBottom\r\n                  align=\"center\"\r\n                  style={{ width: \"100%\" }}\r\n                >\r\n                  THÔNG TIN NGƯỜI DÙNG\r\n                </Typography>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                justify=\"center\"\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n                className={classes.avatar}\r\n              >\r\n                <img\r\n                  //@ts-ignore\r\n                  src={updatedAvatar === \"\" ? dataAvatar : updatedAvatar}\r\n                  alt=\"avatar\"\r\n                  width={200}\r\n                  height={200}\r\n                  className={classes.avatar}\r\n                />\r\n                <InputLabel htmlFor=\"upload-avatar\" className={classes.upload}>\r\n                  <PhotoCameraIcon className={classes.uploadIcon} />\r\n                </InputLabel>\r\n                <Input\r\n                  id=\"upload-avatar\"\r\n                  style={{ display: \"none\" }}\r\n                  type=\"file\"\r\n                  onChange={handleChangeFile}\r\n                />\r\n              </Grid>\r\n              <Grid item container>\r\n                <Table>\r\n                  <TableRow>\r\n                    <TableCell className={classes.tableCell}>\r\n                      <Typography variant=\"body1\" align=\"right\">\r\n                        Vai trò :\r\n                      </Typography>\r\n                    </TableCell>\r\n                    <TableCell className={classes.tableCell}>\r\n                      <Typography variant=\"body1\">\r\n                        {userInfo.isAdmin ? \"Admin\" : \"Người dùng\"}\r\n                      </Typography>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell className={classes.tableCell}>\r\n                      <Typography variant=\"body1\" align=\"right\">\r\n                        Tên :\r\n                      </Typography>\r\n                    </TableCell>\r\n                    <TableCell className={classes.tableCellContent}>\r\n                      {editName ? (\r\n                        <input\r\n                          className={classes.inputEdit}\r\n                          value={updatedName}\r\n                          autoFocus\r\n                          onChange={(e: any) => setUpdatedName(e.target.value)}\r\n                        />\r\n                      ) : (\r\n                        <Typography variant=\"body1\">{updatedName}</Typography>\r\n                      )}\r\n                    </TableCell>\r\n                    <TableCell className={classes.editButtonWrap}>\r\n                      <IconButton\r\n                        onClick={() => {\r\n                          setEditName(!editName);\r\n                        }}\r\n                      >\r\n                        <EditIcon />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow className={classes.tableRow}>\r\n                    <TableCell className={classes.tableCell}>\r\n                      <Typography variant=\"body1\" align=\"right\">\r\n                        Email:\r\n                      </Typography>\r\n                    </TableCell>\r\n                    <TableCell className={classes.tableCellContent}>\r\n                      {editEmail ? (\r\n                        <input\r\n                          autoFocus\r\n                          className={classes.inputEdit}\r\n                          value={updatedEmail}\r\n                          onChange={(e: any) => setUpdatedEmail(e.target.value)}\r\n                        />\r\n                      ) : (\r\n                        <Typography variant=\"body1\">{updatedEmail}</Typography>\r\n                      )}\r\n                    </TableCell>\r\n                    <TableCell className={classes.editButtonWrap}>\r\n                      <IconButton onClick={() => setEditEmail(!editEmail)}>\r\n                        <EditIcon />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell className={classes.tableCell}>\r\n                      <Typography variant=\"body1\" align=\"right\">\r\n                        Password:\r\n                      </Typography>\r\n                    </TableCell>\r\n                    <TableCell className={classes.tableCellContent}>\r\n                      {editPassword ? (\r\n                        <input\r\n                          autoFocus\r\n                          className={classes.inputEdit}\r\n                          value={updatedPassword}\r\n                          onChange={(e: any) =>\r\n                            setUpdatedPassword(e.target.value)\r\n                          }\r\n                        />\r\n                      ) : (\r\n                        <Typography variant=\"body1\">\r\n                          {updatedPassword === \"\"\r\n                            ? \"*********\"\r\n                            : updatedPassword}\r\n                        </Typography>\r\n                      )}\r\n                    </TableCell>\r\n                    <TableCell className={classes.editButtonWrap}>\r\n                      <IconButton\r\n                        onClick={() => setEditPassword(!editPassword)}\r\n                      >\r\n                        <EditIcon />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </Table>\r\n              </Grid>\r\n              <Grid item container justify=\"center\">\r\n                {errorMessage && (\r\n                  <Typography\r\n                    variant=\"body1\"\r\n                    align=\"center\"\r\n                    style={{ width: \"100%\", color: \"red\" }}\r\n                  >\r\n                    {errorMessage}\r\n                  </Typography>\r\n                )}\r\n              </Grid>\r\n              <Grid item container justify=\"center\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  disabled={\r\n                    loading ||\r\n                    (name === updatedName &&\r\n                      email === updatedEmail &&\r\n                      updatedPassword === \"\")\r\n                  }\r\n                  onClick={submitHandle}\r\n                >\r\n                  Update\r\n                </Button>\r\n              </Grid>\r\n            </>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\CartForm.tsx",["247","248","249","250","251","252"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, RouteChildrenProps } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { IThemeOptions } from \"../components/Theme\";\r\nimport numeral from \"numeral\";\r\nimport {\r\n  getCart,\r\n  deleteCartItem,\r\n  clearCartItem,\r\n} from \"../store/actions/cartActions\";\r\nimport Loading from \"../components/Loading\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  CardActions,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst useStyles = makeStyles((theme: IThemeOptions) => ({\r\n  cartItem: { width: \"80%\", height: 100, display: \"flex\", marginBottom: 10 },\r\n  cartItemImage: { height: \"90%\", margin: 10 },\r\n  cardContent: { flex: 1 },\r\n}));\r\n\r\n// eslint-disable-next-line\r\nconst CartList: React.FC<any> = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const [total, setTotal] = useState(0);\r\n  const userLogin = useSelector((state: any) => state.userLogin);\r\n  const {\r\n    userInfo = JSON.parse(localStorage.getItem(\"userInfo\") as string),\r\n  } = userLogin;\r\n  const token = userInfo.token;\r\n  const userLoading = userLogin.loading;\r\n  const userError = userLogin.error;\r\n\r\n  const cartItems = useSelector((state: any) => state.cart.cartItems);\r\n  const cartError = useSelector((state: any) => state.cart.error);\r\n  const cartLoading = useSelector((state: any) => state.cart.loading);\r\n\r\n  const [loading, setLoading] = useState(userLoading && cartLoading);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleDeleteFromCart = (id: any) => {\r\n    dispatch(deleteCartItem(id, token));\r\n  };\r\n\r\n  const handleCheckout = () => {\r\n    if (cartItems.length === 0) {\r\n      return history.push(\"/\");\r\n    }\r\n    return history.push(\"/checkout\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(userLoading || cartLoading);\r\n    setError(userError || cartError);\r\n    const totalPrice = cartItems.reduce((a: any, b: any) => {\r\n      const total =\r\n        a + Number(b.quantity) * Number(b.price.replace(/[.]/g, \"\"));\r\n      return total;\r\n    }, 0);\r\n    setTotal(totalPrice);\r\n  }, [\r\n    total,\r\n    setTotal,\r\n    dispatch,\r\n    cartItems,\r\n    userLoading,\r\n    cartLoading,\r\n    userError,\r\n    cartError,\r\n    token,\r\n  ]);\r\n  return (\r\n    <Container maxWidth=\"lg\" style={{ backgroundColor: \"transparent\" }}>\r\n      {loading ? (\r\n        <div style={{ height: \"100%\" }}>\r\n          <Grid\r\n            container\r\n            style={{ height: 500 }}\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <Loading />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      ) : (\r\n        <Grid container>\r\n          <Grid item container justify=\"center\">\r\n            <Typography variant=\"h5\" align=\"center\">\r\n              GIỎ HÀNG\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item container justify=\"center\">\r\n            {error ? (\r\n              // @ts-ignore\r\n              <Alert severity=\"error\">\r\n                <Typography variant=\"body1\" align=\"center\">\r\n                  {error}\r\n                </Typography>\r\n              </Alert>\r\n            ) : (\r\n              cartItems.length === 0 && (\r\n                // @ts-ignore\r\n                <Alert severity=\"info\">\r\n                  <Typography variant=\"body1\" align=\"center\">\r\n                    Chưa có sản phẩm nào\r\n                  </Typography>\r\n                </Alert>\r\n              )\r\n            )}\r\n          </Grid>\r\n          <Grid item container justify=\"center\">\r\n            <Typography variant=\"h6\" align=\"center\">\r\n              Tổng cộng:{numeral(total).format(\"0,0\").replaceAll(\",\", \".\")}đ\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item container>\r\n            {cartItems.map((p: any) => (\r\n              <Grid item container justify=\"center\" key={p.name}>\r\n                <Card className={classes.cartItem}>\r\n                  <img\r\n                    className={classes.cartItemImage}\r\n                    src={p.image}\r\n                    alt={p.image}\r\n                  />\r\n                  <CardContent className={classes.cardContent}>\r\n                    <Grid\r\n                      container\r\n                      alignItems=\"center\"\r\n                      style={{ height: \"100%\" }}\r\n                    >\r\n                      <Grid item lg={6}>\r\n                        <Typography variant=\"body1\">{p.name}</Typography>\r\n                      </Grid>\r\n                      <Grid item lg={3}>\r\n                        <Typography variant=\"body1\">Giá: {p.price}đ</Typography>\r\n                      </Grid>\r\n                      <Grid item lg={3} style={{ display: \"flex\" }}>\r\n                        <Typography variant=\"body1\" align=\"center\">\r\n                          Số lượng: {p.quantity}\r\n                        </Typography>{\" \"}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <IconButton\r\n                      onClick={() => {\r\n                        console.log(\"p\", p);\r\n                        handleDeleteFromCart(p._id);\r\n                      }}\r\n                    >\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      {!loading && (\r\n        <Grid item container justify=\"center\">\r\n          <Button variant=\"contained\" color=\"primary\" onClick={handleCheckout}>\r\n            {cartItems.length === 0 ? \"Trang chủ\" : \"Tiếp tục\"}\r\n          </Button>\r\n        </Grid>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CartList;\r\n","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\AddressForm.tsx",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Review.tsx",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\PaymentForm.tsx",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\Checkout.tsx",["253","254","255"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport AddressForm from \"../components/AddressForm\";\r\nimport PaymentForm from \"../components/PaymentForm\";\r\nimport Review from \"../components/Review\";\r\n\r\nimport { createOrder, getOrderList } from \"../store/actions/orderActions\";\r\nimport { clearCartItem } from \"../store/actions/cartActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n    border: `1px solid rgba(0,0,0,0.5)`,\r\n    boxShadow: \"10px 10px rgba(0,0,0,0.5)\",\r\n    borderRadius: \"10px\",\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst steps = [\"Địa chỉ nhận hàng\", \"Thanh toán\", \"Xác nhận đơn hàng\"];\r\nconst Checkout: React.FC<any> = ({ history, setValue }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [name, setName] = useState(\"\");\r\n  const [zipCode, setZipCode] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [province, setProvince] = useState(\"\");\r\n  const [district, setDistrict] = useState(\"\");\r\n  const [ward, setWard] = useState(\"\");\r\n  const [paymentMethod, setPaymentMethod] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [nameCard, setNameCard] = useState(\"\");\r\n  const [cardNumber, setCardNumber] = useState(\"\");\r\n  const [expire, setExpire] = useState(\"\");\r\n  const [cvv, setCVV] = useState(\"\");\r\n\r\n  const cartItems = useSelector((state: any) => state.cart.cartItems) || [];\r\n  const userLogin = useSelector((state: any) => state.userLogin);\r\n  const {\r\n    userInfo = JSON.parse(localStorage.getItem(\"userInfo\") as string),\r\n  } = userLogin;\r\n  const token = userInfo.token;\r\n\r\n  const totalPrice = cartItems.reduce((a: any, b: any) => {\r\n    const total = a + Number(b.quantity) * Number(b.price.replace(/[.]/g, \"\"));\r\n    return total;\r\n  }, 0);\r\n\r\n  const order = {\r\n    shippingAddress: {\r\n      province,\r\n      district,\r\n      ward,\r\n      address,\r\n      phone,\r\n    },\r\n    nameOrder: name,\r\n    paymentMethod: {\r\n      method: paymentMethod,\r\n      visa: {\r\n        nameCard,\r\n        cardNumber,\r\n        expire,\r\n        cvv,\r\n      },\r\n    },\r\n    orderItems: [...cartItems],\r\n    totalPrice,\r\n  };\r\n\r\n  const handleCreateOrder = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    dispatch(createOrder(order, token));\r\n    dispatch(clearCartItem(token));\r\n    dispatch(getOrderList(token));\r\n    setActiveStep(activeStep + 1);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setActiveStep(activeStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n\r\n  const handleBackToCart = () => {\r\n    history.push(\"/cart\");\r\n  };\r\n\r\n  function getStepContent(step: number) {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <AddressForm\r\n            setName={setName}\r\n            setAddress={setAddress}\r\n            setPhone={setPhone}\r\n            setProvince={setProvince}\r\n            setDistrict={setDistrict}\r\n            setWard={setWard}\r\n            setZipCode={setZipCode}\r\n          />\r\n        );\r\n      case 1:\r\n        return (\r\n          <PaymentForm\r\n            setNameCard={setNameCard}\r\n            setCardNumber={setCardNumber}\r\n            setExpire={setExpire}\r\n            setCVV={setCVV}\r\n            setPaymentMethod={setPaymentMethod}\r\n          />\r\n        );\r\n      case 2:\r\n        return (\r\n          <Review\r\n            name={name}\r\n            zipCode={zipCode}\r\n            address={address}\r\n            province={province}\r\n            district={district}\r\n            ward={ward}\r\n            phone={phone}\r\n            nameCard={nameCard}\r\n            cardNumber={cardNumber}\r\n            expire={expire}\r\n            cvv={cvv}\r\n            totalPrice={totalPrice}\r\n          />\r\n        );\r\n      default:\r\n        throw new Error(\"Unknown step\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n            Đặt hàng\r\n          </Typography>\r\n          <Stepper activeStep={activeStep} className={classes.stepper}>\r\n            {steps.map((label) => (\r\n              <Step key={label}>\r\n                <StepLabel>{label}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n          <React.Fragment>\r\n            {activeStep === steps.length ? (\r\n              <React.Fragment>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                  Bạn đã đặt hàng thành công.\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">\r\n                  Chúng tôi đã gửi cho bạn 1 email xác nhận đơn đặt hàng.\r\n                </Typography>\r\n                <Grid container justify=\"flex-end\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                      history.push(\"/\");\r\n                      setValue(0);\r\n                    }}\r\n                    className={classes.buttons}\r\n                  >\r\n                    {activeStep === steps.length && \"Trang chủ\"}\r\n                  </Button>\r\n                </Grid>\r\n              </React.Fragment>\r\n            ) : (\r\n              <React.Fragment>\r\n                {getStepContent(activeStep)}\r\n                <div className={classes.buttons}>\r\n                  {\r\n                    <Button\r\n                      onClick={activeStep !== 0 ? handleBack : handleBackToCart}\r\n                      className={classes.button}\r\n                    >\r\n                      {activeStep !== 0 ? \"Trở lại\" : \"Giỏ hàng\"}\r\n                    </Button>\r\n                  }\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={\r\n                      activeStep === steps.length - 1\r\n                        ? handleCreateOrder\r\n                        : handleNext\r\n                    }\r\n                    className={classes.button}\r\n                  >\r\n                    {activeStep === steps.length - 1 ? \"Đặt hàng\" : \"Tiếp theo\"}\r\n                  </Button>\r\n                </div>\r\n              </React.Fragment>\r\n            )}\r\n          </React.Fragment>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Step.tsx",["256","257","258"],"D:\\New folder\\react project\\tekshop\\frontend\\src\\PublicAndPrivateRoute.tsx",[],{"ruleId":"259","replacedBy":"260"},{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","severity":1,"message":"264","line":2,"column":32,"nodeType":"265","messageId":"266","endLine":2,"endColumn":44},{"ruleId":"263","severity":1,"message":"267","line":6,"column":8,"nodeType":"265","messageId":"266","endLine":6,"endColumn":20},{"ruleId":"263","severity":1,"message":"268","line":7,"column":8,"nodeType":"265","messageId":"266","endLine":7,"endColumn":21},{"ruleId":"263","severity":1,"message":"269","line":8,"column":8,"nodeType":"265","messageId":"266","endLine":8,"endColumn":19},{"ruleId":"263","severity":1,"message":"270","line":1,"column":40,"nodeType":"265","messageId":"266","endLine":1,"endColumn":45},{"ruleId":"263","severity":1,"message":"271","line":13,"column":3,"nodeType":"265","messageId":"266","endLine":13,"endColumn":12},{"ruleId":"263","severity":1,"message":"272","line":15,"column":3,"nodeType":"265","messageId":"266","endLine":15,"endColumn":17},{"ruleId":"263","severity":1,"message":"273","line":19,"column":3,"nodeType":"265","messageId":"266","endLine":19,"endColumn":7},{"ruleId":"263","severity":1,"message":"274","line":21,"column":3,"nodeType":"265","messageId":"266","endLine":21,"endColumn":15},{"ruleId":"263","severity":1,"message":"275","line":27,"column":8,"nodeType":"265","messageId":"266","endLine":27,"endColumn":18},{"ruleId":"263","severity":1,"message":"276","line":111,"column":37,"nodeType":"265","messageId":"266","endLine":111,"endColumn":45},{"ruleId":"263","severity":1,"message":"277","line":116,"column":9,"nodeType":"265","messageId":"266","endLine":116,"endColumn":18},{"ruleId":"263","severity":1,"message":"278","line":124,"column":5,"nodeType":"265","messageId":"266","endLine":124,"endColumn":12},{"ruleId":"263","severity":1,"message":"279","line":125,"column":5,"nodeType":"265","messageId":"266","endLine":125,"endColumn":10},{"ruleId":"263","severity":1,"message":"280","line":129,"column":9,"nodeType":"265","messageId":"266","endLine":129,"endColumn":13},{"ruleId":"281","severity":1,"message":"282","line":180,"column":6,"nodeType":"283","endLine":180,"endColumn":33,"suggestions":"284"},{"ruleId":"263","severity":1,"message":"285","line":11,"column":20,"nodeType":"265","messageId":"266","endLine":11,"endColumn":25},{"ruleId":"263","severity":1,"message":"286","line":85,"column":18,"nodeType":"265","messageId":"266","endLine":85,"endColumn":27},{"ruleId":"263","severity":1,"message":"287","line":2,"column":10,"nodeType":"265","messageId":"266","endLine":2,"endColumn":28},{"ruleId":"263","severity":1,"message":"288","line":8,"column":10,"nodeType":"265","messageId":"266","endLine":8,"endColumn":17},{"ruleId":"263","severity":1,"message":"289","line":33,"column":10,"nodeType":"265","messageId":"266","endLine":33,"endColumn":23},{"ruleId":"263","severity":1,"message":"280","line":98,"column":9,"nodeType":"265","messageId":"266","endLine":98,"endColumn":13},{"ruleId":"263","severity":1,"message":"290","line":2,"column":8,"nodeType":"265","messageId":"266","endLine":2,"endColumn":22},{"ruleId":"263","severity":1,"message":"291","line":3,"column":29,"nodeType":"265","messageId":"266","endLine":3,"endColumn":37},{"ruleId":"263","severity":1,"message":"292","line":5,"column":8,"nodeType":"265","messageId":"266","endLine":5,"endColumn":16},{"ruleId":"263","severity":1,"message":"293","line":9,"column":3,"nodeType":"265","messageId":"266","endLine":9,"endColumn":9},{"ruleId":"263","severity":1,"message":"294","line":10,"column":3,"nodeType":"265","messageId":"266","endLine":10,"endColumn":7},{"ruleId":"263","severity":1,"message":"295","line":11,"column":3,"nodeType":"265","messageId":"266","endLine":11,"endColumn":6},{"ruleId":"263","severity":1,"message":"296","line":12,"column":3,"nodeType":"265","messageId":"266","endLine":12,"endColumn":13},{"ruleId":"263","severity":1,"message":"297","line":13,"column":3,"nodeType":"265","messageId":"266","endLine":13,"endColumn":6},{"ruleId":"263","severity":1,"message":"298","line":33,"column":11,"nodeType":"265","messageId":"266","endLine":33,"endColumn":19},{"ruleId":"263","severity":1,"message":"299","line":42,"column":17,"nodeType":"265","messageId":"266","endLine":42,"endColumn":23},{"ruleId":"263","severity":1,"message":"300","line":43,"column":41,"nodeType":"265","messageId":"266","endLine":43,"endColumn":44},{"ruleId":"263","severity":1,"message":"301","line":9,"column":8,"nodeType":"265","messageId":"266","endLine":9,"endColumn":24},{"ruleId":"263","severity":1,"message":"302","line":10,"column":8,"nodeType":"265","messageId":"266","endLine":10,"endColumn":16},{"ruleId":"263","severity":1,"message":"303","line":5,"column":8,"nodeType":"265","messageId":"266","endLine":5,"endColumn":15},{"ruleId":"263","severity":1,"message":"304","line":22,"column":3,"nodeType":"265","messageId":"266","endLine":22,"endColumn":9},{"ruleId":"263","severity":1,"message":"298","line":141,"column":9,"nodeType":"265","messageId":"266","endLine":141,"endColumn":17},{"ruleId":"263","severity":1,"message":"291","line":2,"column":22,"nodeType":"265","messageId":"266","endLine":2,"endColumn":30},{"ruleId":"259","replacedBy":"305"},{"ruleId":"261","replacedBy":"306"},{"ruleId":"263","severity":1,"message":"307","line":1,"column":17,"nodeType":"265","messageId":"266","endLine":1,"endColumn":25},{"ruleId":"263","severity":1,"message":"308","line":1,"column":27,"nodeType":"265","messageId":"266","endLine":1,"endColumn":36},{"ruleId":"263","severity":1,"message":"303","line":3,"column":8,"nodeType":"265","messageId":"266","endLine":3,"endColumn":15},{"ruleId":"263","severity":1,"message":"264","line":4,"column":32,"nodeType":"265","messageId":"266","endLine":4,"endColumn":44},{"ruleId":"263","severity":1,"message":"309","line":7,"column":10,"nodeType":"265","messageId":"266","endLine":7,"endColumn":21},{"ruleId":"263","severity":1,"message":"310","line":7,"column":23,"nodeType":"265","messageId":"266","endLine":7,"endColumn":37},{"ruleId":"263","severity":1,"message":"311","line":11,"column":3,"nodeType":"265","messageId":"266","endLine":11,"endColumn":7},{"ruleId":"263","severity":1,"message":"312","line":14,"column":3,"nodeType":"265","messageId":"266","endLine":14,"endColumn":14},{"ruleId":"263","severity":1,"message":"313","line":15,"column":3,"nodeType":"265","messageId":"266","endLine":15,"endColumn":13},{"ruleId":"263","severity":1,"message":"314","line":16,"column":3,"nodeType":"265","messageId":"266","endLine":16,"endColumn":8},{"ruleId":"263","severity":1,"message":"315","line":17,"column":3,"nodeType":"265","messageId":"266","endLine":17,"endColumn":17},{"ruleId":"263","severity":1,"message":"272","line":18,"column":3,"nodeType":"265","messageId":"266","endLine":18,"endColumn":17},{"ruleId":"263","severity":1,"message":"316","line":19,"column":3,"nodeType":"265","messageId":"266","endLine":19,"endColumn":13},{"ruleId":"263","severity":1,"message":"317","line":21,"column":3,"nodeType":"265","messageId":"266","endLine":21,"endColumn":9},{"ruleId":"263","severity":1,"message":"318","line":68,"column":9,"nodeType":"265","messageId":"266","endLine":68,"endColumn":17},{"ruleId":"263","severity":1,"message":"277","line":69,"column":9,"nodeType":"265","messageId":"266","endLine":69,"endColumn":18},{"ruleId":"263","severity":1,"message":"319","line":72,"column":11,"nodeType":"265","messageId":"266","endLine":72,"endColumn":16},{"ruleId":"263","severity":1,"message":"278","line":72,"column":18,"nodeType":"265","messageId":"266","endLine":72,"endColumn":25},{"ruleId":"263","severity":1,"message":"279","line":72,"column":27,"nodeType":"265","messageId":"266","endLine":72,"endColumn":32},{"ruleId":"263","severity":1,"message":"307","line":1,"column":17,"nodeType":"265","messageId":"266","endLine":1,"endColumn":25},{"ruleId":"263","severity":1,"message":"320","line":2,"column":23,"nodeType":"265","messageId":"266","endLine":2,"endColumn":34},{"ruleId":"263","severity":1,"message":"303","line":3,"column":8,"nodeType":"265","messageId":"266","endLine":3,"endColumn":15},{"ruleId":"263","severity":1,"message":"291","line":4,"column":22,"nodeType":"265","messageId":"266","endLine":4,"endColumn":30},{"ruleId":"263","severity":1,"message":"264","line":4,"column":32,"nodeType":"265","messageId":"266","endLine":4,"endColumn":44},{"ruleId":"259","replacedBy":"321"},{"ruleId":"261","replacedBy":"322"},{"ruleId":"263","severity":1,"message":"308","line":1,"column":27,"nodeType":"265","messageId":"266","endLine":1,"endColumn":36},{"ruleId":"263","severity":1,"message":"264","line":4,"column":32,"nodeType":"265","messageId":"266","endLine":4,"endColumn":44},{"ruleId":"263","severity":1,"message":"323","line":72,"column":9,"nodeType":"265","messageId":"266","endLine":72,"endColumn":14},{"ruleId":"281","severity":1,"message":"324","line":118,"column":6,"nodeType":"283","endLine":118,"endColumn":21,"suggestions":"325"},{"ruleId":"263","severity":1,"message":"326","line":3,"column":10,"nodeType":"265","messageId":"266","endLine":3,"endColumn":14},{"ruleId":"263","severity":1,"message":"287","line":3,"column":16,"nodeType":"265","messageId":"266","endLine":3,"endColumn":34},{"ruleId":"263","severity":1,"message":"291","line":4,"column":22,"nodeType":"265","messageId":"266","endLine":4,"endColumn":30},{"ruleId":"263","severity":1,"message":"288","line":8,"column":3,"nodeType":"265","messageId":"266","endLine":8,"endColumn":10},{"ruleId":"263","severity":1,"message":"327","line":10,"column":3,"nodeType":"265","messageId":"266","endLine":10,"endColumn":16},{"ruleId":"263","severity":1,"message":"328","line":19,"column":3,"nodeType":"265","messageId":"266","endLine":19,"endColumn":12},{"ruleId":"263","severity":1,"message":"329","line":4,"column":8,"nodeType":"265","messageId":"266","endLine":4,"endColumn":19},{"ruleId":"263","severity":1,"message":"293","line":5,"column":8,"nodeType":"265","messageId":"266","endLine":5,"endColumn":14},{"ruleId":"263","severity":1,"message":"330","line":6,"column":8,"nodeType":"265","messageId":"266","endLine":6,"endColumn":15},{"ruleId":"263","severity":1,"message":"304","line":6,"column":8,"nodeType":"265","messageId":"266","endLine":6,"endColumn":14},{"ruleId":"263","severity":1,"message":"296","line":7,"column":8,"nodeType":"265","messageId":"266","endLine":7,"endColumn":18},{"ruleId":"263","severity":1,"message":"331","line":32,"column":10,"nodeType":"265","messageId":"266","endLine":32,"endColumn":24},"no-native-reassign",["332"],"no-negated-in-lhs",["333"],"@typescript-eslint/no-unused-vars","'createStyles' is defined but never used.","Identifier","unusedVar","'FacebookIcon' is defined but never used.","'InstagramIcon' is defined but never used.","'TwitterIcon' is defined but never used.","'Theme' is defined but never used.","'TextField' is defined but never used.","'InputAdornment' is defined but never used.","'List' is defined but never used.","'ListItemText' is defined but never used.","'SearchIcon' is defined but never used.","'location' is assigned a value but never used.","'matchesXS' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'cart' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setValue'. Either include it or remove the dependency array.","ArrayExpression",["334"],"'login' is defined but never used.","'setAvatar' is assigned a value but never used.","'RouteChildrenProps' is defined but never used.","'getCart' is defined but never used.","'IThemeOptions' is defined but never used.","'SwipeableViews' is defined but never used.","'useTheme' is defined but never used.","'Shipping' is defined but never used.","'AppBar' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'Typography' is defined but never used.","'Box' is defined but never used.","'userInfo' is assigned a value but never used.","'method' is assigned a value but never used.","'cvv' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Loading' is defined but never used.","'Button' is defined but never used.",["332"],["333"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'createOrder' is defined but never used.","'getOrderDetail' is defined but never used.","'Card' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'Input' is defined but never used.","'FormHelperText' is defined but never used.","'IconButton' is defined but never used.","'Select' is defined but never used.","'dispatch' is assigned a value but never used.","'order' is assigned a value but never used.","'useSelector' is defined but never used.",["332"],["333"],"'theme' is assigned a value but never used.","React Hook useLayoutEffect has a missing dependency: 'submitHandle'. Either include it or remove the dependency array.",["335"],"'Link' is defined but never used.","'clearCartItem' is defined but never used.","'CardMedia' is defined but never used.","'CssBaseline' is defined but never used.","'Toolbar' is defined but never used.","'getStepContent' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},"Update the dependencies array to be: [value, matchesSM, history, setValue]",{"range":"340","text":"341"},"Update the dependencies array to be: [submitHandle, updatedAvatar]",{"range":"342","text":"343"},[4531,4558],"[value, matchesSM, history, setValue]",[3169,3184],"[submitHandle, updatedAvatar]"]