[{"D:\\New folder\\react project\\tekshop\\frontend\\src\\index.tsx":"1","D:\\New folder\\react project\\tekshop\\frontend\\src\\App.tsx":"2","D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\Home.tsx":"3","D:\\New folder\\react project\\tekshop\\frontend\\src\\assets\\products.js":"4","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Theme.tsx":"5","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Footer.tsx":"6","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Header.tsx":"7","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Rating.tsx":"8","D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\Product.tsx":"9","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\configurationStore.ts":"10","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\reducers\\productReducers.ts":"11","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\actions\\productActions.ts":"12","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\constants\\productConstant.ts":"13","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Loading.tsx":"14"},{"size":323,"mtime":1613483375786,"results":"15","hashOfConfig":"16"},{"size":788,"mtime":1612857261723,"results":"17","hashOfConfig":"16"},{"size":6565,"mtime":1614260547564,"results":"18","hashOfConfig":"16"},{"size":2488,"mtime":1612256634509,"results":"19","hashOfConfig":"16"},{"size":2100,"mtime":1614259706991,"results":"20","hashOfConfig":"16"},{"size":2132,"mtime":1612378413807,"results":"21","hashOfConfig":"16"},{"size":13259,"mtime":1612436324889,"results":"22","hashOfConfig":"16"},{"size":2083,"mtime":1612488488004,"results":"23","hashOfConfig":"16"},{"size":4207,"mtime":1614247187790,"results":"24","hashOfConfig":"16"},{"size":642,"mtime":1614146077067,"results":"25","hashOfConfig":"16"},{"size":1136,"mtime":1614256996712,"results":"26","hashOfConfig":"16"},{"size":1290,"mtime":1614256961808,"results":"27","hashOfConfig":"16"},{"size":421,"mtime":1614008042059,"results":"28","hashOfConfig":"16"},{"size":2575,"mtime":1613911498151,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1ohea2v",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"D:\\New folder\\react project\\tekshop\\frontend\\src\\index.tsx",[],["63","64"],"D:\\New folder\\react project\\tekshop\\frontend\\src\\App.tsx",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\Home.tsx",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\assets\\products.js",[],["65","66"],"D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Theme.tsx",["67"],"D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Footer.tsx",["68","69","70"],"import React from \"react\";\r\nimport { makeStyles, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport { IThemeOptions } from \"./Theme\";\r\nimport { IconButton, Typography, Grid, Toolbar } from \"@material-ui/core\";\r\n\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\n\r\nconst useStyles = makeStyles((theme: IThemeOptions) => ({\r\n  footer: {\r\n    position: \"absolute\",\r\n    minHeight: \"8em\",\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.common.green,\r\n  },\r\n  socialContainer: {\r\n    position: \"absolute\",\r\n    right: \"1.5em\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      right: \"0.6em\",\r\n    },\r\n  },\r\n  container: {\r\n    height: \"8em\",\r\n  },\r\n  iconButton: {\r\n    marginTop: \"auto\",\r\n    marginLeft: \"auto\",\r\n    marginRight: 2,\r\n    marginBottom: 2,\r\n  },\r\n  icon: { fontSize: 40, color: theme.palette.common.white },\r\n  text: { color: theme.palette.common.white },\r\n}));\r\n\r\nfunction Footer() {\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <footer className={classes.footer}>\r\n      <Toolbar className={classes.container}>\r\n        <Grid\r\n          container\r\n          justify=\"flex-end\"\r\n          alignItems=\"flex-end\"\r\n          spacing={2}\r\n          className={classes.socialContainer}\r\n          style={{ height: \"100%\" }}\r\n        >\r\n          <Grid item>\r\n            <Typography variant=\"body1\" className={classes.text}>\r\n              Liên hệ :\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item component=\"a\" href=\"http://facebook.com\" target=\"_blank\">\r\n            <FacebookIcon className={classes.icon} />\r\n          </Grid>\r\n          <Grid item component=\"a\" href=\"http://istagram.com\" target=\"_blank\">\r\n            <InstagramIcon className={classes.icon} />\r\n          </Grid>\r\n          <Grid item component=\"a\" href=\"http://twitter.com\" target=\"_blank\">\r\n            <TwitterIcon className={classes.icon} />\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Header.tsx",["71","72","73"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IThemeOptions } from \"./Theme\";\r\nimport { makeStyles, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Typography,\r\n  AppBar,\r\n  Toolbar,\r\n  useScrollTrigger,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  IconButton,\r\n  InputAdornment,\r\n  Paper,\r\n  useMediaQuery,\r\n  Hidden,\r\n  SwipeableDrawer,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nimport logo from \"../assets/logo.png\";\r\n\r\nenum buttonTag {\r\n  \"contained\",\r\n  \"outlined\",\r\n  \"text\",\r\n}\r\n\r\ninterface Props {\r\n  window?: () => Window;\r\n  children?: React.ReactElement | any;\r\n}\r\n\r\nfunction ElevationScroll(props: Props) {\r\n  const { children, window } = props;\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 0,\r\n    target: window ? window() : undefined,\r\n  });\r\n\r\n  return React.cloneElement(children, {\r\n    elevation: trigger ? 4 : 0,\r\n  });\r\n}\r\n\r\nconst useStyles = makeStyles((theme: IThemeOptions) =>\r\n  createStyles({\r\n    toolBar: {},\r\n    logoContainer: {\r\n      marginLeft: \"2em\",\r\n    },\r\n    logo: {\r\n      maxHeight: \"3em\",\r\n    },\r\n    headerTab: {\r\n      maxWidth: \"7em\",\r\n      paddingLeft: 2,\r\n      paddingRight: 2,\r\n      \"& button\": { margin: \"auto\" },\r\n    },\r\n\r\n    list: {\r\n      display: \"flex\",\r\n      color: theme.palette.common.white,\r\n      width: \"100%\",\r\n      marginLeft: \"1em\",\r\n      marginRight: \"1em\",\r\n      [theme.breakpoints.down(\"md\")]: { marginLeft: 0 },\r\n    },\r\n    space: {\r\n      display: \"block\",\r\n      width: \"100%\",\r\n    },\r\n    search: { width: \"100%\", height: \"2.5em\" },\r\n    menu: {\r\n      marginLeft: 12,\r\n      fontSize: 40,\r\n      color: theme.palette.common.white,\r\n    },\r\n    drawer: {\r\n      minWidth: \"20em\",\r\n      backgroundColor: theme.palette.common.green,\r\n      borderBottom: `1px solid ${theme.palette.common.yellow}`,\r\n    },\r\n    drawItem: {\r\n      color: theme.palette.common.white,\r\n    },\r\n    headerText: {\r\n      color: theme.palette.common.white,\r\n      margin: \"auto\",\r\n      fontSize: 11,\r\n    },\r\n    active: {\r\n      backgroundColor: theme.palette.common.green,\r\n    },\r\n  })\r\n);\r\n\r\nexport default function Header(props: Props) {\r\n  const theme = useTheme();\r\n  const iOS =\r\n    (process as any).browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\r\n  const matchesMD = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n  const matchesSM = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  const matchesXS = useMediaQuery(theme.breakpoints.down(\"xs\"));\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState<number>(0);\r\n  const [openDrawer, setOpenDrawer] = useState(false);\r\n\r\n  useEffect(() => {\r\n    switch (window.location.pathname) {\r\n      case \"/\":\r\n        if (value !== 0 && !matchesSM) {\r\n          setValue(0);\r\n        }\r\n        break;\r\n      case \"/products\":\r\n        if (value !== 1 && !matchesSM) {\r\n          setValue(1);\r\n        }\r\n        break;\r\n      case \"/admin/products\":\r\n        if (value !== 2 && !matchesSM) {\r\n          setValue(2);\r\n        }\r\n        break;\r\n      case \"/admin\":\r\n        if (value !== 3 && !matchesSM) {\r\n          setValue(3);\r\n        }\r\n        break;\r\n      case \"/signup\":\r\n        if (value !== 5 && !matchesSM) {\r\n          setValue(4);\r\n        }\r\n        break;\r\n      case \"/signin\":\r\n        if (value !== 6 && !matchesSM) {\r\n          setValue(5);\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, []);\r\n\r\n  const tabs = (\r\n    <List disablePadding className={classes.list}>\r\n      {matchesSM ? null : (\r\n        <ListItem\r\n          className={classes.headerTab}\r\n          component={Link}\r\n          to=\"/\"\r\n          selected={value === 0}\r\n          onClick={() => setValue(0)}\r\n          classes={{ selected: classes.active }}\r\n        >\r\n          <Button\r\n            // @ts-ignore\r\n            variant={value === 0 ? \"contained\" : \"text\"}\r\n            color=\"secondary\"\r\n          >\r\n            <Typography\r\n              variant=\"button\"\r\n              align=\"center\"\r\n              className={classes.headerText}\r\n            >\r\n              Trang Chủ\r\n            </Typography>\r\n          </Button>\r\n        </ListItem>\r\n      )}\r\n      {matchesSM ? null : (\r\n        <ListItem\r\n          className={classes.headerTab}\r\n          component={Link}\r\n          to=\"/products\"\r\n          selected={value === 1}\r\n          onClick={() => setValue(1)}\r\n        >\r\n          <Button\r\n            // @ts-ignore\r\n            variant={value === 1 ? \"contained\" : \"text\"}\r\n            color=\"secondary\"\r\n          >\r\n            <Typography\r\n              variant=\"button\"\r\n              align=\"center\"\r\n              className={classes.headerText}\r\n            >\r\n              Sản Phẩm\r\n            </Typography>\r\n          </Button>\r\n        </ListItem>\r\n      )}\r\n      {matchesSM ? null : (\r\n        <ListItem\r\n          className={classes.headerTab}\r\n          component={Link}\r\n          to=\"/admin/products\"\r\n          selected={value === 2}\r\n          onClick={() => setValue(2)}\r\n        >\r\n          <Button\r\n            // @ts-ignore\r\n            variant={value === 2 ? \"contained\" : \"text\"}\r\n            color=\"secondary\"\r\n          >\r\n            <Typography\r\n              variant=\"button\"\r\n              align=\"center\"\r\n              className={classes.headerText}\r\n            >\r\n              Chỉnh Sửa\r\n            </Typography>\r\n          </Button>\r\n        </ListItem>\r\n      )}\r\n      {matchesSM ? null : (\r\n        <ListItem\r\n          className={classes.headerTab}\r\n          component={Link}\r\n          to=\"/admin\"\r\n          selected={value === 3}\r\n          onClick={() => setValue(3)}\r\n        >\r\n          <Button\r\n            // @ts-ignore\r\n            variant={value === 3 ? \"contained\" : \"text\"}\r\n            color=\"secondary\"\r\n          >\r\n            <Typography\r\n              variant=\"button\"\r\n              align=\"center\"\r\n              className={classes.headerText}\r\n            >\r\n              Thống kê\r\n            </Typography>\r\n          </Button>\r\n        </ListItem>\r\n      )}\r\n      {matchesXS ? null : (\r\n        <ListItem>\r\n          <Paper\r\n            style={{\r\n              width: \"100%\",\r\n              marginLeft: 10,\r\n              marginRight: 10,\r\n            }}\r\n          >\r\n            <TextField\r\n              autoFocus={false}\r\n              placeholder=\"Tìm kiếm sản phẩm...\"\r\n              className={classes.search}\r\n              variant=\"filled\"\r\n              fullWidth\r\n              // value={search}\r\n              // onChange={handleSearch}\r\n              InputProps={{\r\n                disableUnderline: true,\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\" style={{ cursor: \"pointer\" }}>\r\n                    <IconButton>\r\n                      <SearchIcon color=\"primary\" style={{ fontSize: 40 }} />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </Paper>\r\n        </ListItem>\r\n      )}\r\n      <ListItem\r\n        component={Link}\r\n        to=\"/signup\"\r\n        selected={value === 4}\r\n        style={{ marginLeft: matchesSM ? \"auto\" : undefined }}\r\n        onClick={() => setValue(4)}\r\n        className={classes.headerTab}\r\n      >\r\n        <Button\r\n          // @ts-ignore\r\n          variant={value === 4 ? \"contained\" : \"text\"}\r\n          color=\"secondary\"\r\n        >\r\n          <Typography\r\n            variant=\"button\"\r\n            align=\"center\"\r\n            className={classes.headerText}\r\n          >\r\n            Đăng Ký\r\n          </Typography>\r\n        </Button>\r\n      </ListItem>\r\n      <ListItem\r\n        component={Link}\r\n        to=\"/signin\"\r\n        selected={value === 5}\r\n        onClick={() => setValue(5)}\r\n        className={classes.headerTab}\r\n      >\r\n        <Button\r\n          // @ts-ignore\r\n          variant={value === 5 ? \"contained\" : \"text\"}\r\n          color=\"secondary\"\r\n        >\r\n          <Typography\r\n            variant=\"button\"\r\n            align=\"center\"\r\n            className={classes.headerText}\r\n          >\r\n            Đăng Nhập\r\n          </Typography>\r\n        </Button>\r\n      </ListItem>\r\n      {false ? (\r\n        <ListItem component={Link} to=\"/logout\" className={classes.headerTab}>\r\n          <Typography\r\n            variant=\"button\"\r\n            align=\"center\"\r\n            className={classes.headerText}\r\n          >\r\n            Đăng xuất\r\n          </Typography>\r\n        </ListItem>\r\n      ) : null}\r\n    </List>\r\n  );\r\n\r\n  const drawer = (\r\n    <SwipeableDrawer\r\n      disableBackdropTransition={!iOS}\r\n      disableDiscovery={iOS}\r\n      open={openDrawer}\r\n      onClose={() => setOpenDrawer(false)}\r\n      onOpen={() => setOpenDrawer(true)}\r\n      classes={{ paper: classes.drawer }}\r\n    >\r\n      <List disablePadding>\r\n        {matchesXS ? (\r\n          <ListItem divider className={classes.drawItem}>\r\n            <TextField\r\n              autoFocus={false}\r\n              placeholder=\"Tìm kiếm sản phẩm...\"\r\n              className={classes.search}\r\n              variant=\"filled\"\r\n              // value={search}\r\n              // onChange={handleSearch}\r\n              InputProps={{\r\n                style: { backgroundColor: \"white\", overflow: \"hidden\" },\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\" style={{ cursor: \"pointer\" }}>\r\n                    <IconButton>\r\n                      <SearchIcon color=\"primary\" style={{ width: 30 }} />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </ListItem>\r\n        ) : null}\r\n        <ListItem\r\n          divider\r\n          button\r\n          component={Link}\r\n          to=\"/\"\r\n          selected={value === 0}\r\n          style={{\r\n            backgroundColor:\r\n              // @ts-ignore\r\n              value === 0 ? theme.palette.common.yellow : undefined,\r\n          }}\r\n          onClick={() => {\r\n            setOpenDrawer(false);\r\n            setValue(0);\r\n          }}\r\n        >\r\n          <ListItemText disableTypography className={classes.drawItem}>\r\n            TRANG CHỦ\r\n          </ListItemText>\r\n        </ListItem>\r\n\r\n        <ListItem\r\n          divider\r\n          button\r\n          component={Link}\r\n          to=\"/products\"\r\n          selected={value === 1}\r\n          style={{\r\n            backgroundColor:\r\n              // @ts-ignore\r\n              value === 1 ? theme.palette.common.yellow : undefined,\r\n          }}\r\n          onClick={() => {\r\n            setOpenDrawer(false);\r\n            setValue(1);\r\n          }}\r\n        >\r\n          <ListItemText disableTypography className={classes.drawItem}>\r\n            SẢN PHẨM\r\n          </ListItemText>\r\n        </ListItem>\r\n        <ListItem\r\n          divider\r\n          button\r\n          component={Link}\r\n          to=\"/admin/products\"\r\n          selected={value === 2}\r\n          style={{\r\n            backgroundColor:\r\n              // @ts-ignore\r\n              value === 2 ? theme.palette.common.yellow : undefined,\r\n          }}\r\n          onClick={() => {\r\n            setOpenDrawer(false);\r\n            setValue(2);\r\n          }}\r\n        >\r\n          <ListItemText disableTypography className={classes.drawItem}>\r\n            THÊM SẢN PHẨM\r\n          </ListItemText>\r\n        </ListItem>\r\n        <ListItem\r\n          divider\r\n          button\r\n          component={Link}\r\n          to=\"/admin\"\r\n          selected={value === 3}\r\n          style={{\r\n            backgroundColor:\r\n              // @ts-ignore\r\n              value === 3 ? theme.palette.common.yellow : undefined,\r\n          }}\r\n          onClick={() => {\r\n            setOpenDrawer(false);\r\n            setValue(3);\r\n          }}\r\n        >\r\n          <ListItemText disableTypography className={classes.drawItem}>\r\n            THỐNG KÊ\r\n          </ListItemText>\r\n        </ListItem>\r\n      </List>\r\n    </SwipeableDrawer>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <ElevationScroll {...props}>\r\n        <AppBar position=\"fixed\">\r\n          <Toolbar color=\"primary\" className={classes.toolBar}>\r\n            <Hidden mdDown>\r\n              <Button\r\n                component={Link}\r\n                to=\"/\"\r\n                className={classes.logoContainer}\r\n                onClick={() => {\r\n                  setValue(0);\r\n                }}\r\n                disableRipple\r\n              >\r\n                <img alt=\"company logo\" src={logo} className={classes.logo} />\r\n              </Button>\r\n            </Hidden>\r\n            <Hidden mdUp>\r\n              <IconButton\r\n                onClick={() => setOpenDrawer((st) => !openDrawer)}\r\n                disableRipple\r\n              >\r\n                <MenuIcon className={classes.menu} />\r\n              </IconButton>\r\n            </Hidden>\r\n            <Grid container>{tabs}</Grid>\r\n          </Toolbar>\r\n          {drawer}\r\n        </AppBar>\r\n      </ElevationScroll>{\" \"}\r\n      <div style={{ width: \"100%\", height: \"6em\" }} />\r\n    </>\r\n  );\r\n}\r\n","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Rating.tsx",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\Product.tsx",["74","75"],"import React, { useState, useEffect } from \"react\";\r\nimport { RouteChildrenProps, Link } from \"react-router-dom\";\r\nimport {\r\n  listProductsDetails,\r\n  clearData,\r\n} from \"../store/actions/productActions\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  Typography,\r\n  useTheme,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Rating from \"../components/Rating\";\r\nimport Loading from \"../components/Loading\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\ntype Products = {\r\n  _id: string;\r\n  name: string;\r\n  image: string;\r\n  description: string;\r\n  brand: string;\r\n  category: string;\r\n  price: number;\r\n  countInStock: number;\r\n  rating: number;\r\n  numReviews: number;\r\n};\r\n\r\nexport default function Product({ match }: RouteChildrenProps<any>) {\r\n  const theme = useTheme();\r\n  // const [load, setLoad] = useState(true);\r\n  let id = match!.params.id;\r\n  console.log(id);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state: any) => state.productDetails);\r\n  const { loading = true, error, product } = productDetails;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProductsDetails(id));\r\n\r\n    return () => {\r\n      dispatch(clearData());\r\n    };\r\n  }, [dispatch, id]);\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      {loading ? (\r\n        <Loading />\r\n      ) : error ? (\r\n        // @ts-ignore\r\n        <Alert variant=\"filled\" severity=\"error\">\r\n          Have an Error when loading data\r\n        </Alert>\r\n      ) : (\r\n        <div>\r\n          <Grid container>\r\n            <Link\r\n              to=\"/\"\r\n              style={{\r\n                textDecoration: \"none\",\r\n                color: theme.palette.common.black,\r\n              }}\r\n            >\r\n              <Typography variant=\"h5\">GO BACK</Typography>\r\n            </Link>\r\n          </Grid>\r\n          <Grid container spacing={2}>\r\n            <Grid item lg={6}>\r\n              <img src={product.image[0]} alt={product.name} width=\"100%\" />\r\n            </Grid>\r\n            <Grid item lg={3}>\r\n              <List>\r\n                <ListItem divider>\r\n                  <Typography variant=\"h5\">{product.name}</Typography>\r\n                </ListItem>\r\n                <ListItem divider>\r\n                  <Rating value={product.rating} text={product.numReviews} />\r\n                </ListItem>\r\n                <ListItem divider>\r\n                  <Typography variant=\"h6\">\r\n                    Giá: {product.price}\r\n                    {/* @ts-ignore */}\r\n                    {product.price === \"chưa xác định\" ? \"\" : \"đ\"}\r\n                  </Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                  <Typography variant=\"body1\">\r\n                    <b>Mô tả:</b> {product.description}\r\n                  </Typography>\r\n                </ListItem>\r\n              </List>\r\n            </Grid>\r\n            <Grid item lg={3}>\r\n              <List>\r\n                <ListItem divider>\r\n                  <Grid container justify=\"space-between\">\r\n                    <Typography variant=\"body1\">Giá:</Typography>\r\n                    <Typography variant=\"body1\">\r\n                      {product.price}\r\n                      {/* @ts-ignore */}\r\n                      {product.price === \"chưa xác định\" ? \"\" : \"đ\"}\r\n                    </Typography>\r\n                  </Grid>\r\n                </ListItem>\r\n                <ListItem divider>\r\n                  <Grid container justify=\"space-between\">\r\n                    <Typography variant=\"body1\">Tình trạng:</Typography>\r\n                    <Typography variant=\"body1\">\r\n                      {product.countInStock > 0 ? \"Còn hàng\" : \"Hết hàng\"}\r\n                    </Typography>\r\n                  </Grid>\r\n                </ListItem>\r\n                <ListItem>\r\n                  <Grid container justify=\"center\">\r\n                    <Button variant=\"contained\" color=\"primary\">\r\n                      Thêm Giỏ hàng\r\n                    </Button>\r\n                  </Grid>\r\n                </ListItem>\r\n              </List>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\configurationStore.ts",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\reducers\\productReducers.ts",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\actions\\productActions.ts",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\constants\\productConstant.ts",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Loading.tsx",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"76","replacedBy":"80"},{"ruleId":"78","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":1,"column":40,"nodeType":"84","messageId":"85","endLine":1,"endColumn":45},{"ruleId":"82","severity":1,"message":"86","line":2,"column":32,"nodeType":"84","messageId":"85","endLine":2,"endColumn":44},{"ruleId":"82","severity":1,"message":"87","line":4,"column":10,"nodeType":"84","messageId":"85","endLine":4,"endColumn":20},{"ruleId":"82","severity":1,"message":"88","line":38,"column":9,"nodeType":"84","messageId":"85","endLine":38,"endColumn":14},{"ruleId":"82","severity":1,"message":"89","line":28,"column":6,"nodeType":"84","messageId":"85","endLine":28,"endColumn":15},{"ruleId":"82","severity":1,"message":"90","line":109,"column":9,"nodeType":"84","messageId":"85","endLine":109,"endColumn":18},{"ruleId":"91","severity":1,"message":"92","line":151,"column":6,"nodeType":"93","endLine":151,"endColumn":8,"suggestions":"94"},{"ruleId":"82","severity":1,"message":"95","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":25},{"ruleId":"82","severity":1,"message":"96","line":21,"column":6,"nodeType":"84","messageId":"85","endLine":21,"endColumn":14},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],["97"],["98"],"@typescript-eslint/no-unused-vars","'Theme' is defined but never used.","Identifier","unusedVar","'createStyles' is defined but never used.","'IconButton' is defined but never used.","'theme' is assigned a value but never used.","'buttonTag' is defined but never used.","'matchesMD' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'matchesSM' and 'value'. Either include them or remove the dependency array.","ArrayExpression",["99"],"'useState' is defined but never used.","'Products' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},"Update the dependencies array to be: [matchesSM, value]",{"range":"102","text":"103"},[3612,3614],"[matchesSM, value]"]