[{"D:\\New folder\\react project\\tekshop\\frontend\\src\\index.tsx":"1","D:\\New folder\\react project\\tekshop\\frontend\\src\\App.tsx":"2","D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\Home.tsx":"3","D:\\New folder\\react project\\tekshop\\frontend\\src\\assets\\products.js":"4","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Theme.tsx":"5","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Footer.tsx":"6","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Header.tsx":"7","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Rating.tsx":"8","D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\Product.tsx":"9","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\configurationStore.ts":"10","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\reducers\\productReducers.ts":"11","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\actions\\productActions.ts":"12","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\constants\\productConstant.ts":"13","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Loading.tsx":"14","D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\Cart.tsx":"15","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\reducers\\cartReducers.ts":"16","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\constants\\cartConstants.ts":"17","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\actions\\cartAction.ts":"18","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\reducers\\userReducers.ts":"19","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\constants\\userConstants.ts":"20","D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\Login.tsx":"21","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\FormContainer.tsx":"22","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\actions\\userAction.ts":"23","D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\Register.tsx":"24","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Modal.tsx":"25"},{"size":323,"mtime":1613483375786,"results":"26","hashOfConfig":"27"},{"size":1759,"mtime":1614925860208,"results":"28","hashOfConfig":"27"},{"size":6951,"mtime":1614881159372,"results":"29","hashOfConfig":"27"},{"size":2488,"mtime":1612256634509,"results":"30","hashOfConfig":"27"},{"size":2595,"mtime":1614881740899,"results":"31","hashOfConfig":"27"},{"size":3927,"mtime":1614390236771,"results":"32","hashOfConfig":"27"},{"size":15772,"mtime":1614927879832,"results":"33","hashOfConfig":"27"},{"size":2083,"mtime":1612488488004,"results":"34","hashOfConfig":"27"},{"size":8530,"mtime":1614933623428,"results":"35","hashOfConfig":"27"},{"size":1281,"mtime":1614887025881,"results":"36","hashOfConfig":"27"},{"size":1136,"mtime":1614256996712,"results":"37","hashOfConfig":"27"},{"size":1298,"mtime":1614555759041,"results":"38","hashOfConfig":"27"},{"size":421,"mtime":1614008042059,"results":"39","hashOfConfig":"27"},{"size":2575,"mtime":1613911498151,"results":"40","hashOfConfig":"27"},{"size":4836,"mtime":1614933987448,"results":"41","hashOfConfig":"27"},{"size":657,"mtime":1614507243849,"results":"42","hashOfConfig":"27"},{"size":47,"mtime":1614501368138,"results":"43","hashOfConfig":"27"},{"size":409,"mtime":1614564119733,"results":"44","hashOfConfig":"27"},{"size":1045,"mtime":1614892759740,"results":"45","hashOfConfig":"27"},{"size":396,"mtime":1614885522209,"results":"46","hashOfConfig":"27"},{"size":6046,"mtime":1614928760532,"results":"47","hashOfConfig":"27"},{"size":1063,"mtime":1614855715541,"results":"48","hashOfConfig":"27"},{"size":1552,"mtime":1614892385779,"results":"49","hashOfConfig":"27"},{"size":9591,"mtime":1614933713653,"results":"50","hashOfConfig":"27"},{"size":1349,"mtime":1614925385594,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1ohea2v",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"D:\\New folder\\react project\\tekshop\\frontend\\src\\index.tsx",[],["110","111"],"D:\\New folder\\react project\\tekshop\\frontend\\src\\App.tsx",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\Home.tsx",["112","113"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport { IThemeOptions } from \"../components/Theme\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProducts } from \"../store/actions/productActions\";\r\nimport Loading from \"../components/Loading\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardMedia,\r\n  CardContent,\r\n  Typography,\r\n  Grid,\r\n  useMediaQuery,\r\n  GridList,\r\n  Container,\r\n  GridListTile,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Rating from \"../components/Rating\";\r\n\r\nimport apple from \"../assets/logo/apple.jpg\";\r\nimport samsung from \"../assets/logo/samsung.jpg\";\r\nimport oppo from \"../assets/logo/oppo.jpg\";\r\nimport huawei from \"../assets/logo/huawei.jpg\";\r\nimport nokia from \"../assets/logo/nokia.jpg\";\r\nimport realme from \"../assets/logo/realme.jpg\";\r\nimport vivo from \"../assets/logo/vivo.jpg\";\r\nimport masstel from \"../assets/logo/masstel.jpg\";\r\nimport vsmart from \"../assets/logo/vsmart.jpg\";\r\n\r\nconst logos = [\r\n  { brand: \"apple\", src: apple },\r\n  { brand: \"samsung\", src: samsung },\r\n  { brand: \"oppo\", src: oppo },\r\n  { brand: \"huawei\", src: huawei },\r\n  { brand: \"nokia\", src: nokia },\r\n  { brand: \"realme\", src: realme },\r\n  { brand: \"vivo\", src: vivo },\r\n  { brand: \"masstel\", src: masstel },\r\n  { brand: \"vsmart\", src: vsmart },\r\n];\r\n\r\ntype Products = {\r\n  _id: string;\r\n  name: string;\r\n  image: string;\r\n  description: string;\r\n  brand: string;\r\n  category: string;\r\n  price: number;\r\n  countInStock: number;\r\n  rating: number;\r\n  numReviews: number;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: IThemeOptions) =>\r\n  createStyles({\r\n    card: {\r\n      width: 230,\r\n      maxHeight: 400,\r\n      backgroundColor: theme.palette.common.white,\r\n    },\r\n    cardHeader: { height: \"3em\" },\r\n    image: { height: \"12em\", width: \"100%\" },\r\n    cardTitle: { fontSize: 17 },\r\n    cardSubheader: { fontSize: 11 },\r\n    icon: { fontSize: 20 },\r\n    text: {},\r\n    cardLink: {\r\n      display: \"flex\",\r\n      maxWidth: 230,\r\n      margin: \"auto\",\r\n      textDecoration: \"none\",\r\n      \"&:hover\": {\r\n        \"& $cardSubheader,$cardTitle,$text\": { color: \"red\" },\r\n        \"& $image\": {\r\n          transform: \"scale(1.15, 1.15)\",\r\n          transition: \"transform 0.3s\",\r\n        },\r\n      },\r\n    },\r\n    logoContainer: {\r\n      marginBottom: \"2em\",\r\n    },\r\n    logo: { width: \"100%\" },\r\n    pagination: {\r\n      width: 500,\r\n      margin: \"auto\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default function Home(props: any) {\r\n  const theme = useTheme();\r\n  const matchesMD = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n  const matchesSM = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  const matchesXS = useMediaQuery(theme.breakpoints.down(\"xs\"));\r\n  const [page, setPage] = useState(1);\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state: any) => state.productList);\r\n  const userInfo = useSelector((state: any) => state.userLogin);\r\n\r\n  //@ts-ignore\r\n  const { loading = true, error, products } = productList;\r\n\r\n  const perPage = 15;\r\n  const totalProduct = products.count;\r\n  const totalPage = Math.ceil(totalProduct / perPage);\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(page));\r\n  }, [dispatch, page]);\r\n\r\n  const handleChangePage = (\r\n    event: React.ChangeEvent<unknown>,\r\n    value: number\r\n  ) => {\r\n    setPage(value);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      {matchesMD || (\r\n        <Grid item container className={classes.logoContainer}>\r\n          {logos.map((i: any) => (\r\n            <Grid item lg key={i.brand}>\r\n              <img src={i.src} alt={i.brand} className={classes.logo} />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      )}\r\n      {loading ? (\r\n        <GridList\r\n          cellHeight={380}\r\n          cols={matchesXS ? 1 : matchesSM ? 2 : matchesMD ? 3 : 5}\r\n        >\r\n          {Array.from(new Array(15)).map((p: any, i: any) => (\r\n            <GridListTile key={i} style={{ marginBottom: 25 }}>\r\n              <Skeleton variant=\"rect\" width={230} height={400}></Skeleton>\r\n            </GridListTile>\r\n          ))}\r\n        </GridList>\r\n      ) : error ? (\r\n        // @ts-ignore\r\n        <Alert variant=\"filled\" severity=\"error\">\r\n          Have an Error when loading data\r\n        </Alert>\r\n      ) : (\r\n        <Grid container>\r\n          <Grid item container>\r\n            <GridList\r\n              cellHeight={380}\r\n              cols={matchesXS ? 1 : matchesSM ? 2 : matchesMD ? 3 : 5}\r\n            >\r\n              {products.products.map((product: Products) => (\r\n                <GridListTile key={product._id}>\r\n                  <Link\r\n                    to={`/product/${product._id}`}\r\n                    className={classes.cardLink}\r\n                  >\r\n                    <Card className={classes.card}>\r\n                      <CardHeader\r\n                        className={classes.cardHeader}\r\n                        title={product.name}\r\n                        classes={{\r\n                          title: classes.cardTitle,\r\n                          subheader: classes.cardSubheader,\r\n                        }}\r\n                        subheader={product.brand}\r\n                      />\r\n                      <CardMedia\r\n                        image={product.image[0]}\r\n                        className={classes.image}\r\n                      />\r\n                      <CardContent>\r\n                        <Grid container direction=\"column\" justify=\"center\">\r\n                          <Grid\r\n                            item\r\n                            container\r\n                            justify=\"center\"\r\n                            alignItems=\"center\"\r\n                          >\r\n                            <Typography variant=\"h6\" className={classes.text}>\r\n                              {product.price}đ\r\n                            </Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <Rating\r\n                            value={product.rating}\r\n                            text={product.numReviews}\r\n                          />\r\n                        </Grid>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Link>\r\n                </GridListTile>\r\n              ))}\r\n            </GridList>\r\n          </Grid>\r\n          <Grid item container justify=\"center\">\r\n            <Pagination\r\n              color=\"primary\"\r\n              page={page}\r\n              count={totalPage}\r\n              size=\"large\"\r\n              onChange={handleChangePage}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","D:\\New folder\\react project\\tekshop\\frontend\\src\\assets\\products.js",[],["114","115"],"D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Theme.tsx",["116"],"import { createMuiTheme, ThemeOptions, Theme } from \"@material-ui/core/styles\";\r\nimport { Palette } from \"@material-ui/core/styles/createPalette\";\r\nimport { TypographyOptions } from \"@material-ui/core/styles/createTypography\";\r\n\r\ninterface ITypography extends TypographyOptions {\r\n  body3: any;\r\n}\r\n\r\ninterface IPalette extends Palette {\r\n  common: {\r\n    green: string;\r\n    black: string;\r\n    white: string;\r\n    yellow: string;\r\n    grey: string;\r\n  };\r\n}\r\n\r\nexport interface IThemeOptions extends ThemeOptions {\r\n  palette: IPalette;\r\n  typography: ITypography;\r\n  overrides: any;\r\n  breakpoints: any;\r\n}\r\n\r\nconst greenColor = \"#09496e\";\r\nconst yellowColor = \"#dbc412\";\r\nconst greyColor = \"#e6e6e6\";\r\n\r\nlet theme = createMuiTheme({});\r\n\r\nexport default createMuiTheme({\r\n  overrides: {\r\n    table: {\r\n      borderColor: \"grey\",\r\n    },\r\n\r\n    buttonWrapper: {\r\n      position: \"absolute\",\r\n      height: \"100% !important\",\r\n      backgroundColor: \"transparent\",\r\n      top: \"calc(50% - 70px)\",\r\n      \"&:hover\": {\r\n        \"& $button\": {\r\n          backgroundColor: \"black\",\r\n          filter: \"brightness(120%)\",\r\n          opacity: \"0.4\",\r\n        },\r\n      },\r\n    },\r\n    MuiListItem: {\r\n      divider: {\r\n        borderBottom: `1px solid ${greyColor}`,\r\n      },\r\n      root: {\r\n        \"&$selected\": {\r\n          backgroundColor: `rgba(0, 0, 0, 0)`,\r\n          \"&:hover\": {\r\n            backgroundColor: `rgba(0, 0, 0, 0)`,\r\n          },\r\n        },\r\n        button: {\r\n          \"&:hover\": {\r\n            backgroundColor: yellowColor,\r\n          },\r\n        },\r\n      },\r\n    },\r\n\r\n    MuiTab: {\r\n      root: {\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n          minWidth: 100,\r\n        },\r\n      },\r\n    },\r\n    MuiFilledInput: {\r\n      input: {\r\n        paddingTop: 10,\r\n        paddingLeft: 12,\r\n        paddingBottom: 10,\r\n      },\r\n    },\r\n    MuiTabs: { indicator: {} },\r\n    MuiToolbar: {\r\n      gutters: {\r\n        paddingLeft: 0,\r\n        paddingRight: 0,\r\n        [theme.breakpoints.up(\"sm\")]: { paddingLeft: 0, paddingRight: 0 },\r\n      },\r\n    },\r\n    MuiGridList: { root: { width: \"100%\" } },\r\n  },\r\n\r\n  palette: {\r\n    common: {\r\n      green: greenColor,\r\n      yellow: yellowColor,\r\n      grey: greyColor,\r\n    },\r\n    primary: {\r\n      main: greenColor,\r\n    },\r\n    secondary: {\r\n      main: yellowColor,\r\n    },\r\n  },\r\n  typography: {\r\n    body3: {\r\n      fontFamily: \"Roboto\" || \"Helvetica\" || \"Arial\" || \"sans-serif\",\r\n      fontWeight: 300,\r\n      fontSize: \"0.6rem\",\r\n      lineHeight: 1.2,\r\n      letterSpacing: \"0.008em\",\r\n    },\r\n  },\r\n} as IThemeOptions);\r\n","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Footer.tsx",["117","118","119","120"],"import React from \"react\";\r\nimport { makeStyles, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport { IThemeOptions } from \"./Theme\";\r\nimport { IconButton, Typography, Grid, Toolbar } from \"@material-ui/core\";\r\n\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\n\r\nconst useStyles = makeStyles((theme: IThemeOptions) => ({\r\n  footer: {\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.common.green,\r\n    color: theme.palette.common.white,\r\n  },\r\n  socialContainer: {\r\n    position: \"absolute\",\r\n    right: \"1.5em\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      right: \"0.6em\",\r\n    },\r\n  },\r\n  container: {\r\n    height: 180,\r\n  },\r\n  end: {\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    height: 30,\r\n  },\r\n  linkContainer: {\r\n    borderBottom: \"1px solid white\",\r\n    position: \"absolute\",\r\n    bottom: 30,\r\n  },\r\n  iconButton: {\r\n    marginTop: \"auto\",\r\n    marginLeft: \"auto\",\r\n    marginRight: 2,\r\n    marginBottom: 2,\r\n  },\r\n  footerTitle: { fontWeight: \"bold\", textDecoration: \"underline\" },\r\n  icon: { fontSize: 30, color: theme.palette.common.white },\r\n  text: { color: theme.palette.common.white },\r\n}));\r\n\r\nfunction Footer() {\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <footer className={classes.footer}>\r\n      <Grid container className={classes.container}>\r\n        <Grid item container className={classes.linkContainer}>\r\n          <Grid item lg>\r\n            <Typography\r\n              align=\"center\"\r\n              gutterBottom\r\n              className={classes.footerTitle}\r\n            >\r\n              Thông tin\r\n            </Typography>\r\n            <Typography align=\"center\" gutterBottom>\r\n              Giới thiệu\r\n            </Typography>\r\n            <Typography align=\"center\" gutterBottom>\r\n              Liên hệ\r\n            </Typography>\r\n            <Typography align=\"center\" gutterBottom>\r\n              Đối tác\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item lg>\r\n            <Typography\r\n              align=\"center\"\r\n              gutterBottom\r\n              className={classes.footerTitle}\r\n            >\r\n              Chính sách\r\n            </Typography>\r\n            <Typography align=\"center\" gutterBottom>\r\n              Chính sách đổi hàng\r\n            </Typography>\r\n            <Typography align=\"center\" gutterBottom>\r\n              Chính sách bảo mật\r\n            </Typography>\r\n            <Typography align=\"center\" gutterBottom>\r\n              Chính sách bảo hành\r\n            </Typography>\r\n            <Typography align=\"center\" gutterBottom>\r\n              Chính sách hoàn tiền\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item lg>\r\n            <Typography\r\n              align=\"center\"\r\n              gutterBottom\r\n              className={classes.footerTitle}\r\n            >\r\n              Dịch vụ\r\n            </Typography>\r\n            <Typography align=\"center\" gutterBottom>\r\n              Thanh toán\r\n            </Typography>\r\n            <Typography align=\"center\" gutterBottom>\r\n              vận chuyển\r\n            </Typography>\r\n            <Typography align=\"center\" gutterBottom>\r\n              Câu hỏi thường gặp\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item container className={classes.end}>\r\n          <Grid item>\r\n            <Typography variant=\"caption\">\r\n              Copyright © 2017 All Rights Reserved by me.\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item className={classes.socialContainer}>\r\n            <FacebookIcon />\r\n            <InstagramIcon />\r\n            <TwitterIcon />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Header.tsx",["121","122","123","124"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IThemeOptions } from \"./Theme\";\r\nimport { makeStyles, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Typography,\r\n  AppBar,\r\n  Toolbar,\r\n  useScrollTrigger,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  IconButton,\r\n  InputAdornment,\r\n  Paper,\r\n  useMediaQuery,\r\n  Hidden,\r\n  SwipeableDrawer,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Menu,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport { USER_LOGOUT } from \"../store/constants/userConstants\";\r\nimport logo from \"../assets/logo.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Modal from \"../components/Modal\";\r\n\r\ninterface Props {\r\n  window?: () => Window;\r\n  children?: React.ReactElement | any;\r\n}\r\n\r\nfunction ElevationScroll(props: Props) {\r\n  const { children, window } = props;\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 0,\r\n    target: window ? window() : undefined,\r\n  });\r\n\r\n  return React.cloneElement(children, {\r\n    elevation: trigger ? 4 : 0,\r\n  });\r\n}\r\n\r\nconst useStyles = makeStyles((theme: IThemeOptions) =>\r\n  createStyles({\r\n    toolBar: {},\r\n    logoContainer: {\r\n      marginLeft: \"2em\",\r\n    },\r\n    logo: {\r\n      maxHeight: \"3em\",\r\n    },\r\n    headerTab: {\r\n      maxWidth: \"7em\",\r\n      paddingLeft: 2,\r\n      paddingRight: 2,\r\n      \"& button\": { margin: \"auto\" },\r\n    },\r\n\r\n    list: {\r\n      display: \"flex\",\r\n      color: theme.palette.common.white,\r\n      width: \"100%\",\r\n      marginLeft: \"1em\",\r\n      marginRight: \"1em\",\r\n      [theme.breakpoints.down(\"md\")]: { marginLeft: 0 },\r\n    },\r\n    space: {\r\n      display: \"block\",\r\n      width: \"100%\",\r\n    },\r\n    search: { width: \"100%\", height: \"2.5em\" },\r\n    menu: {\r\n      marginLeft: 12,\r\n      fontSize: 40,\r\n      color: theme.palette.common.white,\r\n    },\r\n    drawer: {\r\n      minWidth: \"20em\",\r\n      backgroundColor: theme.palette.common.green,\r\n      borderBottom: `1px solid ${theme.palette.common.yellow}`,\r\n    },\r\n    drawItem: {\r\n      color: theme.palette.common.white,\r\n    },\r\n    headerText: {\r\n      color: theme.palette.common.white,\r\n      margin: \"auto\",\r\n      fontSize: 11,\r\n    },\r\n    active: {\r\n      backgroundColor: theme.palette.common.green,\r\n    },\r\n    link: {\r\n      textDecoration: \"none\",\r\n      color: \"inherit\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default function Header(props: any) {\r\n  const theme = useTheme();\r\n  const { value, setValue, history, location } = props;\r\n  const iOS =\r\n    (process as any).browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\r\n  const matchesMD = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n  const matchesSM = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  const matchesXS = useMediaQuery(theme.breakpoints.down(\"xs\"));\r\n  const classes = useStyles();\r\n  const [openDrawer, setOpenDrawer] = useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const dispatch = useDispatch();\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const userInfo = useSelector((state: any) => state.userLogin.userInfo);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpenModal = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setOpen(false);\r\n    setValue(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    switch (window.location.pathname) {\r\n      case \"/\":\r\n        if (value !== 0 && !matchesSM) {\r\n          setValue(0);\r\n        }\r\n        break;\r\n      case \"/products\":\r\n        if (value !== 1 && !matchesSM) {\r\n          setValue(1);\r\n        }\r\n        break;\r\n      case \"/admin/products\":\r\n        if (value !== 2 && !matchesSM) {\r\n          setValue(2);\r\n        }\r\n        break;\r\n      case \"/admin\":\r\n        if (value !== 3 && !matchesSM) {\r\n          setValue(3);\r\n        }\r\n        break;\r\n      case \"/signup\":\r\n        if (value !== 5 && !matchesSM) {\r\n          setValue(4);\r\n        }\r\n        break;\r\n      case \"/signin\":\r\n        if (value !== 6 && !matchesSM) {\r\n          setValue(5);\r\n        }\r\n        break;\r\n      default:\r\n        setValue(9);\r\n        break;\r\n    }\r\n  }, [value, matchesSM, history]);\r\n\r\n  const tabs = (\r\n    <List disablePadding className={classes.list}>\r\n      {matchesSM ? null : (\r\n        <ListItem\r\n          className={classes.headerTab}\r\n          component={Link}\r\n          to=\"/\"\r\n          selected={value === 0}\r\n          onClick={() => setValue(0)}\r\n          classes={{ selected: classes.active }}\r\n        >\r\n          <Button\r\n            // @ts-ignore\r\n            variant={value === 0 ? \"contained\" : \"text\"}\r\n            color=\"secondary\"\r\n          >\r\n            <Typography\r\n              variant=\"button\"\r\n              align=\"center\"\r\n              className={classes.headerText}\r\n            >\r\n              Trang Chủ\r\n            </Typography>\r\n          </Button>\r\n        </ListItem>\r\n      )}\r\n      {matchesSM ? null : (\r\n        <ListItem\r\n          className={classes.headerTab}\r\n          component={Link}\r\n          to=\"/products\"\r\n          selected={value === 1}\r\n          onClick={() => setValue(1)}\r\n        >\r\n          <Button\r\n            // @ts-ignore\r\n            variant={value === 1 ? \"contained\" : \"text\"}\r\n            color=\"secondary\"\r\n          >\r\n            <Typography\r\n              variant=\"button\"\r\n              align=\"center\"\r\n              className={classes.headerText}\r\n            >\r\n              Sản Phẩm\r\n            </Typography>\r\n          </Button>\r\n        </ListItem>\r\n      )}\r\n      {matchesSM ? null : (\r\n        <ListItem\r\n          className={classes.headerTab}\r\n          component={Link}\r\n          to=\"/admin/products\"\r\n          selected={value === 2}\r\n          onClick={() => setValue(2)}\r\n        >\r\n          <Button\r\n            // @ts-ignore\r\n            variant={value === 2 ? \"contained\" : \"text\"}\r\n            color=\"secondary\"\r\n          >\r\n            <Typography\r\n              variant=\"button\"\r\n              align=\"center\"\r\n              className={classes.headerText}\r\n            >\r\n              Chỉnh Sửa\r\n            </Typography>\r\n          </Button>\r\n        </ListItem>\r\n      )}\r\n      {matchesSM ? null : (\r\n        <ListItem\r\n          className={classes.headerTab}\r\n          component={Link}\r\n          to=\"/admin\"\r\n          selected={value === 3}\r\n          onClick={() => setValue(3)}\r\n        >\r\n          <Button\r\n            // @ts-ignore\r\n            variant={value === 3 ? \"contained\" : \"text\"}\r\n            color=\"secondary\"\r\n          >\r\n            <Typography\r\n              variant=\"button\"\r\n              align=\"center\"\r\n              className={classes.headerText}\r\n            >\r\n              Thống kê\r\n            </Typography>\r\n          </Button>\r\n        </ListItem>\r\n      )}\r\n      {matchesXS ? null : (\r\n        <ListItem>\r\n          <Paper\r\n            style={{\r\n              width: \"100%\",\r\n              marginLeft: 10,\r\n              marginRight: 10,\r\n            }}\r\n          >\r\n            <TextField\r\n              autoFocus={false}\r\n              placeholder=\"Tìm kiếm sản phẩm...\"\r\n              className={classes.search}\r\n              variant=\"filled\"\r\n              fullWidth\r\n              // value={search}\r\n              // onChange={handleSearch}\r\n              InputProps={{\r\n                disableUnderline: true,\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\" style={{ cursor: \"pointer\" }}>\r\n                    <IconButton>\r\n                      <SearchIcon color=\"primary\" style={{ fontSize: 40 }} />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </Paper>\r\n        </ListItem>\r\n      )}\r\n      {userInfo ? (\r\n        <ListItem\r\n          className={classes.headerTab}\r\n          style={{ marginLeft: matchesSM ? \"auto\" : undefined }}\r\n        >\r\n          <IconButton\r\n            style={{ color: theme.palette.common.white }}\r\n            onClick={handleClick}\r\n            aria-controls=\"profile-menu\"\r\n            aria-haspopup=\"true\"\r\n          >\r\n            <PersonIcon />\r\n            <Typography variant=\"body1\">{userInfo.name}</Typography>\r\n            <ArrowDropDownIcon />\r\n          </IconButton>\r\n          <Menu\r\n            id=\"profile-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n          >\r\n            <MenuItem onClick={handleClose}>\r\n              <Link className={classes.link} to=\"/profile\">\r\n                Hồ sơ\r\n              </Link>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleClose}>\r\n              <Link className={classes.link} to=\"/cart\">\r\n                Giỏ hàng\r\n              </Link>\r\n            </MenuItem>\r\n            <MenuItem\r\n              onClick={() => {\r\n                handleClose();\r\n                setOpen(true);\r\n                dispatch({ type: USER_LOGOUT });\r\n              }}\r\n            >\r\n              <Link className={classes.link} to=\"/\">\r\n                Đăng xuất\r\n              </Link>\r\n            </MenuItem>\r\n          </Menu>\r\n        </ListItem>\r\n      ) : (\r\n        <>\r\n          <ListItem\r\n            component={Link}\r\n            to=\"/signup\"\r\n            selected={value === 4}\r\n            style={{ marginLeft: matchesSM ? \"auto\" : undefined }}\r\n            onClick={() => setValue(4)}\r\n            className={classes.headerTab}\r\n          >\r\n            <Button\r\n              // @ts-ignore\r\n              variant={value === 4 ? \"contained\" : \"text\"}\r\n              color=\"secondary\"\r\n            >\r\n              <Typography\r\n                variant=\"button\"\r\n                align=\"center\"\r\n                className={classes.headerText}\r\n              >\r\n                Đăng Ký\r\n              </Typography>\r\n            </Button>\r\n          </ListItem>\r\n\r\n          <ListItem\r\n            component={Link}\r\n            to={`/signin`}\r\n            selected={value === 5}\r\n            onClick={() => setValue(5)}\r\n            className={classes.headerTab}\r\n          >\r\n            <Button\r\n              // @ts-ignore\r\n              variant={value === 5 ? \"contained\" : \"text\"}\r\n              color=\"secondary\"\r\n            >\r\n              <Typography\r\n                variant=\"button\"\r\n                align=\"center\"\r\n                className={classes.headerText}\r\n              >\r\n                Đăng Nhập\r\n              </Typography>\r\n            </Button>\r\n          </ListItem>\r\n        </>\r\n      )}\r\n    </List>\r\n  );\r\n\r\n  const drawer = (\r\n    <SwipeableDrawer\r\n      disableBackdropTransition={!iOS}\r\n      disableDiscovery={iOS}\r\n      open={openDrawer}\r\n      onClose={() => setOpenDrawer(false)}\r\n      onOpen={() => setOpenDrawer(true)}\r\n      classes={{ paper: classes.drawer }}\r\n    >\r\n      <List disablePadding>\r\n        {matchesXS ? (\r\n          <ListItem divider className={classes.drawItem}>\r\n            <TextField\r\n              autoFocus={false}\r\n              placeholder=\"Tìm kiếm sản phẩm...\"\r\n              className={classes.search}\r\n              variant=\"filled\"\r\n              // value={search}\r\n              // onChange={handleSearch}\r\n              InputProps={{\r\n                style: { backgroundColor: \"white\", overflow: \"hidden\" },\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\" style={{ cursor: \"pointer\" }}>\r\n                    <IconButton>\r\n                      <SearchIcon color=\"primary\" style={{ width: 30 }} />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </ListItem>\r\n        ) : null}\r\n        <ListItem\r\n          divider\r\n          button\r\n          component={Link}\r\n          to=\"/\"\r\n          selected={value === 0}\r\n          style={{\r\n            backgroundColor:\r\n              // @ts-ignore\r\n              value === 0 ? theme.palette.common.yellow : undefined,\r\n          }}\r\n          onClick={() => {\r\n            setOpenDrawer(false);\r\n            setValue(0);\r\n          }}\r\n        >\r\n          <ListItemText disableTypography className={classes.drawItem}>\r\n            TRANG CHỦ\r\n          </ListItemText>\r\n        </ListItem>\r\n\r\n        <ListItem\r\n          divider\r\n          button\r\n          component={Link}\r\n          to=\"/products\"\r\n          selected={value === 1}\r\n          style={{\r\n            backgroundColor:\r\n              // @ts-ignore\r\n              value === 1 ? theme.palette.common.yellow : undefined,\r\n          }}\r\n          onClick={() => {\r\n            setOpenDrawer(false);\r\n            setValue(1);\r\n          }}\r\n        >\r\n          <ListItemText disableTypography className={classes.drawItem}>\r\n            SẢN PHẨM\r\n          </ListItemText>\r\n        </ListItem>\r\n        <ListItem\r\n          divider\r\n          button\r\n          component={Link}\r\n          to=\"/admin/products\"\r\n          selected={value === 2}\r\n          style={{\r\n            backgroundColor:\r\n              // @ts-ignore\r\n              value === 2 ? theme.palette.common.yellow : undefined,\r\n          }}\r\n          onClick={() => {\r\n            setOpenDrawer(false);\r\n            setValue(2);\r\n          }}\r\n        >\r\n          <ListItemText disableTypography className={classes.drawItem}>\r\n            THÊM SẢN PHẨM\r\n          </ListItemText>\r\n        </ListItem>\r\n        <ListItem\r\n          divider\r\n          button\r\n          component={Link}\r\n          to=\"/admin\"\r\n          selected={value === 3}\r\n          style={{\r\n            backgroundColor:\r\n              // @ts-ignore\r\n              value === 3 ? theme.palette.common.yellow : undefined,\r\n          }}\r\n          onClick={() => {\r\n            setOpenDrawer(false);\r\n            setValue(3);\r\n          }}\r\n        >\r\n          <ListItemText disableTypography className={classes.drawItem}>\r\n            THỐNG KÊ\r\n          </ListItemText>\r\n        </ListItem>\r\n      </List>\r\n    </SwipeableDrawer>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <ElevationScroll {...props}>\r\n        <AppBar position=\"fixed\">\r\n          <Toolbar color=\"primary\" className={classes.toolBar}>\r\n            <Hidden mdDown>\r\n              <Button\r\n                component={Link}\r\n                to=\"/\"\r\n                className={classes.logoContainer}\r\n                onClick={() => {\r\n                  setValue(0);\r\n                }}\r\n                disableRipple\r\n              >\r\n                <img alt=\"company logo\" src={logo} className={classes.logo} />\r\n              </Button>\r\n            </Hidden>\r\n            <Hidden mdUp>\r\n              <IconButton\r\n                onClick={() => setOpenDrawer((st) => !openDrawer)}\r\n                disableRipple\r\n              >\r\n                <MenuIcon className={classes.menu} />\r\n              </IconButton>\r\n            </Hidden>\r\n            <Grid container>{tabs}</Grid>\r\n          </Toolbar>\r\n          {drawer}\r\n        </AppBar>\r\n      </ElevationScroll>\r\n      <Modal\r\n        handleOpenModal={handleOpenModal}\r\n        handleCloseModal={handleCloseModal}\r\n        text={\"Bạn đã đăng xuất thành công\"}\r\n        open={open}\r\n      />\r\n      <div style={{ width: \"100%\", height: \"6em\" }} />\r\n    </>\r\n  );\r\n}\r\n","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Rating.tsx",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\Product.tsx",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\configurationStore.ts",["125"],"import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n} from \"./reducers/productReducers\";\r\nimport { cartReducer } from \"./reducers/cartReducers\";\r\nimport { userLoginReducer, userRegisterReducer } from \"./reducers/userReducers\";\r\n\r\nconst composeEnhancers =\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst cartItemsFromStore = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\") as string)\r\n  : [];\r\n\r\nconst userInfoFromStore = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\") as string)\r\n  : null;\r\n\r\nconst initialState = {\r\n  productList: [],\r\n  productDetails: {},\r\n  cart: { cartItems: cartItemsFromStore },\r\n  userLogin: userInfoFromStore,\r\n};\r\n\r\n// store creation\r\nfunction store() {\r\n  const store = createStore(\r\n    combineReducers({\r\n      productList: productListReducer,\r\n      productDetails: productDetailsReducer,\r\n      cart: cartReducer,\r\n      userLogin: userLoginReducer,\r\n      userRegister: userRegisterReducer,\r\n    }),\r\n    // @ts-ignore\r\n    {},\r\n    composeEnhancers(applyMiddleware(thunk))\r\n  );\r\n  return store;\r\n}\r\n\r\nexport default store;\r\n","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\reducers\\productReducers.ts",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\actions\\productActions.ts",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\constants\\productConstant.ts",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Loading.tsx",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\Cart.tsx",["126","127","128","129"],"D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\reducers\\cartReducers.ts",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\constants\\cartConstants.ts",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\actions\\cartAction.ts",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\reducers\\userReducers.ts",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\constants\\userConstants.ts",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\Login.tsx",["130","131"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Modal from \"../components/Modal\";\r\nimport { makeStyles, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport { IThemeOptions } from \"../components/Theme\";\r\nimport { login } from \"../store/actions/userAction\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Input,\r\n  FormHelperText,\r\n  InputAdornment,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\n\r\nconst useStyles = makeStyles((theme: IThemeOptions) => ({\r\n  input: { height: 100 },\r\n  error: { color: \"red\" },\r\n}));\r\n\r\nconst LoginScreen = ({ match, location, history, children, setValue }: any) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(false);\r\n  const [emailHelpText, setEmailHelpText] = useState(\"\");\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordHelpText, setPasswordHelpText] = useState(\"\");\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [passwordError, setPasswordError] = useState(false);\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state: any) => state.userLogin);\r\n  const { loading = false, error, userInfo } = userLogin;\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpenModal = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setOpen(false);\r\n    setValue(0);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      setEmailError(false);\r\n      setPasswordError(false);\r\n      setOpen(true);\r\n    } else if (error) {\r\n      const { validationErrors } = error;\r\n      if (validationErrors) {\r\n        const emailDataError = validationErrors.find(\r\n          (i: any) => i.param === \"email\"\r\n        );\r\n        const passwordDataError = validationErrors.find(\r\n          (i: any) => i.param === \"password\"\r\n        );\r\n\r\n        if (emailDataError) {\r\n          setEmailError(true);\r\n          setEmailHelpText(emailDataError.msg);\r\n        } else {\r\n          setEmailError(false);\r\n        }\r\n        if (passwordDataError) {\r\n          setPasswordError(true);\r\n          setPasswordHelpText(passwordDataError.msg);\r\n        } else {\r\n          setPasswordError(false);\r\n        }\r\n      }\r\n    }\r\n  }, [userInfo, error]);\r\n\r\n  const submitHandle = async (e: any) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <form onSubmit={submitHandle} noValidate autoComplete=\"off\">\r\n        <Grid container justify=\"center\" alignItems=\"center\">\r\n          <Grid\r\n            item\r\n            container\r\n            justify=\"center\"\r\n            className={classes.input}\r\n            alignItems=\"center\"\r\n          >\r\n            <FormControl style={{ width: 400 }}>\r\n              <InputLabel htmlFor=\"email\">Email </InputLabel>\r\n              <Input\r\n                id=\"email\"\r\n                aria-describedby=\"email-address\"\r\n                type=\"text\"\r\n                value={email}\r\n                error={emailError}\r\n                onChange={(e: any) => setEmail(e.target.value.trim())}\r\n              />\r\n              {emailError && (\r\n                <FormHelperText\r\n                  id=\"email-helper-text\"\r\n                  className={classes.error}\r\n                >\r\n                  {emailHelpText}\r\n                </FormHelperText>\r\n              )}\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            justify=\"center\"\r\n            className={classes.input}\r\n            alignItems=\"center\"\r\n          >\r\n            <FormControl style={{ width: 400 }}>\r\n              <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n              <Input\r\n                id=\"password\"\r\n                aria-describedby=\"password\"\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                value={password}\r\n                error={passwordError}\r\n                onChange={(e: any) => setPassword(e.target.value.trim())}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={() => setShowPassword(!showPassword)}\r\n                      edge=\"end\"\r\n                    >\r\n                      {showPassword ? (\r\n                        <VisibilityIcon />\r\n                      ) : (\r\n                        <VisibilityOffIcon />\r\n                      )}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n\r\n              {passwordError && (\r\n                <FormHelperText\r\n                  id=\"password-helper-text\"\r\n                  className={classes.error}\r\n                >\r\n                  {passwordHelpText}\r\n                </FormHelperText>\r\n              )}\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item style={{ width: 300 }}>\r\n            <Grid item container justify=\"space-between\">\r\n              <Grid item>\r\n                <Typography>Quên mật khẩu</Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  disabled={loading}\r\n                >\r\n                  Đăng nhập\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      <Modal\r\n        handleOpenModal={handleOpenModal}\r\n        handleCloseModal={handleCloseModal}\r\n        text={\"Bạn đã đăng nhập thành công\"}\r\n        open={open}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\FormContainer.tsx",["132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153"],"D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\actions\\userAction.ts",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\Register.tsx",["154","155","156","157","158"],"D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Modal.tsx",[],{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":6,"column":8,"nodeType":"165","messageId":"166","endLine":6,"endColumn":15},{"ruleId":"163","severity":1,"message":"167","line":109,"column":9,"nodeType":"165","messageId":"166","endLine":109,"endColumn":17},{"ruleId":"159","replacedBy":"168"},{"ruleId":"161","replacedBy":"169"},{"ruleId":"163","severity":1,"message":"170","line":1,"column":40,"nodeType":"165","messageId":"166","endLine":1,"endColumn":45},{"ruleId":"163","severity":1,"message":"171","line":2,"column":32,"nodeType":"165","messageId":"166","endLine":2,"endColumn":44},{"ruleId":"163","severity":1,"message":"172","line":4,"column":10,"nodeType":"165","messageId":"166","endLine":4,"endColumn":20},{"ruleId":"163","severity":1,"message":"173","line":4,"column":40,"nodeType":"165","messageId":"166","endLine":4,"endColumn":47},{"ruleId":"163","severity":1,"message":"174","line":49,"column":9,"nodeType":"165","messageId":"166","endLine":49,"endColumn":14},{"ruleId":"163","severity":1,"message":"175","line":32,"column":10,"nodeType":"165","messageId":"166","endLine":32,"endColumn":20},{"ruleId":"163","severity":1,"message":"176","line":112,"column":37,"nodeType":"165","messageId":"166","endLine":112,"endColumn":45},{"ruleId":"163","severity":1,"message":"177","line":115,"column":9,"nodeType":"165","messageId":"166","endLine":115,"endColumn":18},{"ruleId":"178","severity":1,"message":"179","line":177,"column":6,"nodeType":"180","endLine":177,"endColumn":33,"suggestions":"181"},{"ruleId":"163","severity":1,"message":"182","line":21,"column":7,"nodeType":"165","messageId":"166","endLine":21,"endColumn":19},{"ruleId":"163","severity":1,"message":"183","line":3,"column":10,"nodeType":"165","messageId":"166","endLine":3,"endColumn":14},{"ruleId":"163","severity":1,"message":"184","line":4,"column":22,"nodeType":"165","messageId":"166","endLine":4,"endColumn":30},{"ruleId":"163","severity":1,"message":"185","line":39,"column":11,"nodeType":"165","messageId":"166","endLine":39,"endColumn":18},{"ruleId":"163","severity":1,"message":"186","line":39,"column":28,"nodeType":"165","messageId":"166","endLine":39,"endColumn":33},{"ruleId":"163","severity":1,"message":"184","line":4,"column":22,"nodeType":"165","messageId":"166","endLine":4,"endColumn":30},{"ruleId":"163","severity":1,"message":"171","line":4,"column":32,"nodeType":"165","messageId":"166","endLine":4,"endColumn":44},{"ruleId":"163","severity":1,"message":"187","line":1,"column":27,"nodeType":"165","messageId":"166","endLine":1,"endColumn":36},{"ruleId":"163","severity":1,"message":"188","line":2,"column":10,"nodeType":"165","messageId":"166","endLine":2,"endColumn":21},{"ruleId":"163","severity":1,"message":"189","line":2,"column":23,"nodeType":"165","messageId":"166","endLine":2,"endColumn":34},{"ruleId":"163","severity":1,"message":"183","line":3,"column":10,"nodeType":"165","messageId":"166","endLine":3,"endColumn":14},{"ruleId":"163","severity":1,"message":"190","line":3,"column":16,"nodeType":"165","messageId":"166","endLine":3,"endColumn":34},{"ruleId":"163","severity":1,"message":"184","line":4,"column":22,"nodeType":"165","messageId":"166","endLine":4,"endColumn":30},{"ruleId":"163","severity":1,"message":"171","line":4,"column":32,"nodeType":"165","messageId":"166","endLine":4,"endColumn":44},{"ruleId":"163","severity":1,"message":"191","line":6,"column":10,"nodeType":"165","messageId":"166","endLine":6,"endColumn":15},{"ruleId":"163","severity":1,"message":"192","line":10,"column":3,"nodeType":"165","messageId":"166","endLine":10,"endColumn":13},{"ruleId":"163","severity":1,"message":"193","line":11,"column":3,"nodeType":"165","messageId":"166","endLine":11,"endColumn":9},{"ruleId":"163","severity":1,"message":"194","line":12,"column":3,"nodeType":"165","messageId":"166","endLine":12,"endColumn":7},{"ruleId":"163","severity":1,"message":"195","line":13,"column":3,"nodeType":"165","messageId":"166","endLine":13,"endColumn":12},{"ruleId":"163","severity":1,"message":"196","line":14,"column":3,"nodeType":"165","messageId":"166","endLine":14,"endColumn":14},{"ruleId":"163","severity":1,"message":"197","line":15,"column":3,"nodeType":"165","messageId":"166","endLine":15,"endColumn":14},{"ruleId":"163","severity":1,"message":"172","line":16,"column":3,"nodeType":"165","messageId":"166","endLine":16,"endColumn":13},{"ruleId":"163","severity":1,"message":"198","line":21,"column":10,"nodeType":"165","messageId":"166","endLine":21,"endColumn":15},{"ruleId":"163","severity":1,"message":"199","line":21,"column":17,"nodeType":"165","messageId":"166","endLine":21,"endColumn":25},{"ruleId":"163","severity":1,"message":"200","line":22,"column":10,"nodeType":"165","messageId":"166","endLine":22,"endColumn":14},{"ruleId":"163","severity":1,"message":"201","line":22,"column":16,"nodeType":"165","messageId":"166","endLine":22,"endColumn":23},{"ruleId":"163","severity":1,"message":"202","line":23,"column":10,"nodeType":"165","messageId":"166","endLine":23,"endColumn":18},{"ruleId":"163","severity":1,"message":"203","line":23,"column":20,"nodeType":"165","messageId":"166","endLine":23,"endColumn":31},{"ruleId":"163","severity":1,"message":"204","line":24,"column":9,"nodeType":"165","messageId":"166","endLine":24,"endColumn":16},{"ruleId":"163","severity":1,"message":"183","line":4,"column":10,"nodeType":"165","messageId":"166","endLine":4,"endColumn":14},{"ruleId":"163","severity":1,"message":"190","line":4,"column":16,"nodeType":"165","messageId":"166","endLine":4,"endColumn":34},{"ruleId":"163","severity":1,"message":"184","line":5,"column":22,"nodeType":"165","messageId":"166","endLine":5,"endColumn":30},{"ruleId":"163","severity":1,"message":"171","line":5,"column":32,"nodeType":"165","messageId":"166","endLine":5,"endColumn":44},{"ruleId":"163","severity":1,"message":"191","line":7,"column":20,"nodeType":"165","messageId":"166","endLine":7,"endColumn":25},"no-native-reassign",["205"],"no-negated-in-lhs",["206"],"@typescript-eslint/no-unused-vars","'Loading' is defined but never used.","Identifier","unusedVar","'userInfo' is assigned a value but never used.",["205"],["206"],"'Theme' is defined but never used.","'createStyles' is defined but never used.","'IconButton' is defined but never used.","'Toolbar' is defined but never used.","'theme' is assigned a value but never used.","'useHistory' is defined but never used.","'location' is assigned a value but never used.","'matchesMD' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setValue'. Either include it or remove the dependency array.","ArrayExpression",["207"],"'initialState' is assigned a value but never used.","'Link' is defined but never used.","'useTheme' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'RouteChildrenProps' is defined but never used.","'login' is defined but never used.","'Typography' is defined but never used.","'Select' is defined but never used.","'Card' is defined but never used.","'CardMedia' is defined but never used.","'CardContent' is defined but never used.","'CardActions' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"208","fix":"209"},"Update the dependencies array to be: [value, matchesSM, history, setValue]",{"range":"210","text":"211"},[4567,4594],"[value, matchesSM, history, setValue]"]