[{"D:\\New folder\\react project\\tekshop\\frontend\\src\\index.tsx":"1","D:\\New folder\\react project\\tekshop\\frontend\\src\\App.tsx":"2","D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\Home.tsx":"3","D:\\New folder\\react project\\tekshop\\frontend\\src\\assets\\products.js":"4","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Theme.tsx":"5","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Footer.tsx":"6","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Header.tsx":"7","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Rating.tsx":"8","D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\Product.tsx":"9","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\configurationStore.ts":"10","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\reducers\\productReducers.ts":"11","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\actions\\productActions.ts":"12","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\constants\\productConstant.ts":"13","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Loading.tsx":"14","D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\Cart.tsx":"15","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\reducers\\cartReducers.ts":"16","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\constants\\cartConstants.ts":"17","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\actions\\cartAction.ts":"18","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\reducers\\userReducers.ts":"19","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\constants\\userConstants.ts":"20","D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\Login.tsx":"21","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\actions\\userAction.ts":"22","D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\Register.tsx":"23","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Modal.tsx":"24","D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\Profile.tsx":"25"},{"size":323,"mtime":1613483375786,"results":"26","hashOfConfig":"27"},{"size":2024,"mtime":1615190198372,"results":"28","hashOfConfig":"27"},{"size":6951,"mtime":1614881159372,"results":"29","hashOfConfig":"27"},{"size":2488,"mtime":1612256634509,"results":"30","hashOfConfig":"27"},{"size":2691,"mtime":1615190130143,"results":"31","hashOfConfig":"27"},{"size":3927,"mtime":1614390236771,"results":"32","hashOfConfig":"27"},{"size":15975,"mtime":1615279396438,"results":"33","hashOfConfig":"27"},{"size":2083,"mtime":1612488488004,"results":"34","hashOfConfig":"27"},{"size":8861,"mtime":1615279739604,"results":"35","hashOfConfig":"27"},{"size":1281,"mtime":1615299280149,"results":"36","hashOfConfig":"27"},{"size":1136,"mtime":1615009606570,"results":"37","hashOfConfig":"27"},{"size":1298,"mtime":1614555759041,"results":"38","hashOfConfig":"27"},{"size":421,"mtime":1614008042059,"results":"39","hashOfConfig":"27"},{"size":2575,"mtime":1613911498151,"results":"40","hashOfConfig":"27"},{"size":5722,"mtime":1615279374808,"results":"41","hashOfConfig":"27"},{"size":1391,"mtime":1615059393450,"results":"42","hashOfConfig":"27"},{"size":737,"mtime":1614971255228,"results":"43","hashOfConfig":"27"},{"size":2311,"mtime":1615104863025,"results":"44","hashOfConfig":"27"},{"size":1446,"mtime":1615299168002,"results":"45","hashOfConfig":"27"},{"size":615,"mtime":1615299279202,"results":"46","hashOfConfig":"27"},{"size":6218,"mtime":1615279732151,"results":"47","hashOfConfig":"27"},{"size":2478,"mtime":1615305653391,"results":"48","hashOfConfig":"27"},{"size":13096,"mtime":1615281554169,"results":"49","hashOfConfig":"27"},{"size":1349,"mtime":1614925385594,"results":"50","hashOfConfig":"27"},{"size":9463,"mtime":1615306717228,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1ohea2v",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\New folder\\react project\\tekshop\\frontend\\src\\index.tsx",[],["107","108"],"D:\\New folder\\react project\\tekshop\\frontend\\src\\App.tsx",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\Home.tsx",["109","110"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport { IThemeOptions } from \"../components/Theme\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProducts } from \"../store/actions/productActions\";\r\nimport Loading from \"../components/Loading\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardMedia,\r\n  CardContent,\r\n  Typography,\r\n  Grid,\r\n  useMediaQuery,\r\n  GridList,\r\n  Container,\r\n  GridListTile,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Rating from \"../components/Rating\";\r\n\r\nimport apple from \"../assets/logo/apple.jpg\";\r\nimport samsung from \"../assets/logo/samsung.jpg\";\r\nimport oppo from \"../assets/logo/oppo.jpg\";\r\nimport huawei from \"../assets/logo/huawei.jpg\";\r\nimport nokia from \"../assets/logo/nokia.jpg\";\r\nimport realme from \"../assets/logo/realme.jpg\";\r\nimport vivo from \"../assets/logo/vivo.jpg\";\r\nimport masstel from \"../assets/logo/masstel.jpg\";\r\nimport vsmart from \"../assets/logo/vsmart.jpg\";\r\n\r\nconst logos = [\r\n  { brand: \"apple\", src: apple },\r\n  { brand: \"samsung\", src: samsung },\r\n  { brand: \"oppo\", src: oppo },\r\n  { brand: \"huawei\", src: huawei },\r\n  { brand: \"nokia\", src: nokia },\r\n  { brand: \"realme\", src: realme },\r\n  { brand: \"vivo\", src: vivo },\r\n  { brand: \"masstel\", src: masstel },\r\n  { brand: \"vsmart\", src: vsmart },\r\n];\r\n\r\ntype Products = {\r\n  _id: string;\r\n  name: string;\r\n  image: string;\r\n  description: string;\r\n  brand: string;\r\n  category: string;\r\n  price: number;\r\n  countInStock: number;\r\n  rating: number;\r\n  numReviews: number;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: IThemeOptions) =>\r\n  createStyles({\r\n    card: {\r\n      width: 230,\r\n      maxHeight: 400,\r\n      backgroundColor: theme.palette.common.white,\r\n    },\r\n    cardHeader: { height: \"3em\" },\r\n    image: { height: \"12em\", width: \"100%\" },\r\n    cardTitle: { fontSize: 17 },\r\n    cardSubheader: { fontSize: 11 },\r\n    icon: { fontSize: 20 },\r\n    text: {},\r\n    cardLink: {\r\n      display: \"flex\",\r\n      maxWidth: 230,\r\n      margin: \"auto\",\r\n      textDecoration: \"none\",\r\n      \"&:hover\": {\r\n        \"& $cardSubheader,$cardTitle,$text\": { color: \"red\" },\r\n        \"& $image\": {\r\n          transform: \"scale(1.15, 1.15)\",\r\n          transition: \"transform 0.3s\",\r\n        },\r\n      },\r\n    },\r\n    logoContainer: {\r\n      marginBottom: \"2em\",\r\n    },\r\n    logo: { width: \"100%\" },\r\n    pagination: {\r\n      width: 500,\r\n      margin: \"auto\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default function Home(props: any) {\r\n  const theme = useTheme();\r\n  const matchesMD = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n  const matchesSM = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  const matchesXS = useMediaQuery(theme.breakpoints.down(\"xs\"));\r\n  const [page, setPage] = useState(1);\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state: any) => state.productList);\r\n  const userInfo = useSelector((state: any) => state.userLogin);\r\n\r\n  //@ts-ignore\r\n  const { loading = true, error, products } = productList;\r\n\r\n  const perPage = 15;\r\n  const totalProduct = products.count;\r\n  const totalPage = Math.ceil(totalProduct / perPage);\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(page));\r\n  }, [dispatch, page]);\r\n\r\n  const handleChangePage = (\r\n    event: React.ChangeEvent<unknown>,\r\n    value: number\r\n  ) => {\r\n    setPage(value);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      {matchesMD || (\r\n        <Grid item container className={classes.logoContainer}>\r\n          {logos.map((i: any) => (\r\n            <Grid item lg key={i.brand}>\r\n              <img src={i.src} alt={i.brand} className={classes.logo} />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      )}\r\n      {loading ? (\r\n        <GridList\r\n          cellHeight={380}\r\n          cols={matchesXS ? 1 : matchesSM ? 2 : matchesMD ? 3 : 5}\r\n        >\r\n          {Array.from(new Array(15)).map((p: any, i: any) => (\r\n            <GridListTile key={i} style={{ marginBottom: 25 }}>\r\n              <Skeleton variant=\"rect\" width={230} height={400}></Skeleton>\r\n            </GridListTile>\r\n          ))}\r\n        </GridList>\r\n      ) : error ? (\r\n        // @ts-ignore\r\n        <Alert variant=\"filled\" severity=\"error\">\r\n          Have an Error when loading data\r\n        </Alert>\r\n      ) : (\r\n        <Grid container>\r\n          <Grid item container>\r\n            <GridList\r\n              cellHeight={380}\r\n              cols={matchesXS ? 1 : matchesSM ? 2 : matchesMD ? 3 : 5}\r\n            >\r\n              {products.products.map((product: Products) => (\r\n                <GridListTile key={product._id}>\r\n                  <Link\r\n                    to={`/product/${product._id}`}\r\n                    className={classes.cardLink}\r\n                  >\r\n                    <Card className={classes.card}>\r\n                      <CardHeader\r\n                        className={classes.cardHeader}\r\n                        title={product.name}\r\n                        classes={{\r\n                          title: classes.cardTitle,\r\n                          subheader: classes.cardSubheader,\r\n                        }}\r\n                        subheader={product.brand}\r\n                      />\r\n                      <CardMedia\r\n                        image={product.image[0]}\r\n                        className={classes.image}\r\n                      />\r\n                      <CardContent>\r\n                        <Grid container direction=\"column\" justify=\"center\">\r\n                          <Grid\r\n                            item\r\n                            container\r\n                            justify=\"center\"\r\n                            alignItems=\"center\"\r\n                          >\r\n                            <Typography variant=\"h6\" className={classes.text}>\r\n                              {product.price}đ\r\n                            </Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <Rating\r\n                            value={product.rating}\r\n                            text={product.numReviews}\r\n                          />\r\n                        </Grid>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Link>\r\n                </GridListTile>\r\n              ))}\r\n            </GridList>\r\n          </Grid>\r\n          <Grid item container justify=\"center\">\r\n            <Pagination\r\n              color=\"primary\"\r\n              page={page}\r\n              count={totalPage}\r\n              size=\"large\"\r\n              onChange={handleChangePage}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","D:\\New folder\\react project\\tekshop\\frontend\\src\\assets\\products.js",[],["111","112"],"D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Theme.tsx",["113"],"D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Footer.tsx",["114","115","116","117"],"import React from \"react\";\r\nimport { makeStyles, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport { IThemeOptions } from \"./Theme\";\r\nimport { IconButton, Typography, Grid, Toolbar } from \"@material-ui/core\";\r\n\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\n\r\nconst useStyles = makeStyles((theme: IThemeOptions) => ({\r\n  footer: {\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.common.green,\r\n    color: theme.palette.common.white,\r\n  },\r\n  socialContainer: {\r\n    position: \"absolute\",\r\n    right: \"1.5em\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      right: \"0.6em\",\r\n    },\r\n  },\r\n  container: {\r\n    height: 180,\r\n  },\r\n  end: {\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    height: 30,\r\n  },\r\n  linkContainer: {\r\n    borderBottom: \"1px solid white\",\r\n    position: \"absolute\",\r\n    bottom: 30,\r\n  },\r\n  iconButton: {\r\n    marginTop: \"auto\",\r\n    marginLeft: \"auto\",\r\n    marginRight: 2,\r\n    marginBottom: 2,\r\n  },\r\n  footerTitle: { fontWeight: \"bold\", textDecoration: \"underline\" },\r\n  icon: { fontSize: 30, color: theme.palette.common.white },\r\n  text: { color: theme.palette.common.white },\r\n}));\r\n\r\nfunction Footer() {\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <footer className={classes.footer}>\r\n      <Grid container className={classes.container}>\r\n        <Grid item container className={classes.linkContainer}>\r\n          <Grid item lg>\r\n            <Typography\r\n              align=\"center\"\r\n              gutterBottom\r\n              className={classes.footerTitle}\r\n            >\r\n              Thông tin\r\n            </Typography>\r\n            <Typography align=\"center\" gutterBottom>\r\n              Giới thiệu\r\n            </Typography>\r\n            <Typography align=\"center\" gutterBottom>\r\n              Liên hệ\r\n            </Typography>\r\n            <Typography align=\"center\" gutterBottom>\r\n              Đối tác\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item lg>\r\n            <Typography\r\n              align=\"center\"\r\n              gutterBottom\r\n              className={classes.footerTitle}\r\n            >\r\n              Chính sách\r\n            </Typography>\r\n            <Typography align=\"center\" gutterBottom>\r\n              Chính sách đổi hàng\r\n            </Typography>\r\n            <Typography align=\"center\" gutterBottom>\r\n              Chính sách bảo mật\r\n            </Typography>\r\n            <Typography align=\"center\" gutterBottom>\r\n              Chính sách bảo hành\r\n            </Typography>\r\n            <Typography align=\"center\" gutterBottom>\r\n              Chính sách hoàn tiền\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item lg>\r\n            <Typography\r\n              align=\"center\"\r\n              gutterBottom\r\n              className={classes.footerTitle}\r\n            >\r\n              Dịch vụ\r\n            </Typography>\r\n            <Typography align=\"center\" gutterBottom>\r\n              Thanh toán\r\n            </Typography>\r\n            <Typography align=\"center\" gutterBottom>\r\n              vận chuyển\r\n            </Typography>\r\n            <Typography align=\"center\" gutterBottom>\r\n              Câu hỏi thường gặp\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item container className={classes.end}>\r\n          <Grid item>\r\n            <Typography variant=\"caption\">\r\n              Copyright © 2017 All Rights Reserved by me.\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item className={classes.socialContainer}>\r\n            <FacebookIcon />\r\n            <InstagramIcon />\r\n            <TwitterIcon />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Header.tsx",["118","119","120","121","122","123"],"D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Rating.tsx",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\Product.tsx",["124"],"D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\configurationStore.ts",["125"],"D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\reducers\\productReducers.ts",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\actions\\productActions.ts",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\constants\\productConstant.ts",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Loading.tsx",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\Cart.tsx",["126","127","128","129","130","131"],"D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\reducers\\cartReducers.ts",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\constants\\cartConstants.ts",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\actions\\cartAction.ts",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\reducers\\userReducers.ts",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\constants\\userConstants.ts",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\Login.tsx",["132","133"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Modal from \"../components/Modal\";\r\nimport { makeStyles, useTheme, createStyles } from \"@material-ui/core/styles\";\r\nimport { IThemeOptions } from \"../components/Theme\";\r\nimport { login } from \"../store/actions/userAction\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Input,\r\n  FormHelperText,\r\n  InputAdornment,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport { getCart } from \"../store/actions/cartAction\";\r\n\r\nconst useStyles = makeStyles((theme: IThemeOptions) => ({\r\n  input: { height: 100 },\r\n  error: { color: \"red\" },\r\n}));\r\n\r\nconst LoginScreen = ({ match, location, history, children, setValue }: any) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(false);\r\n  const [emailHelpText, setEmailHelpText] = useState(\"\");\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordHelpText, setPasswordHelpText] = useState(\"\");\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [passwordError, setPasswordError] = useState(false);\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state: any) => state.userLogin);\r\n  const {\r\n    loading = false,\r\n    error,\r\n    userInfo = JSON.parse(localStorage.getItem(\"userInfo\") as string),\r\n  } = userLogin;\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpenModal = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setOpen(false);\r\n    setValue(0);\r\n    history.push(\"/\");\r\n    dispatch(getCart(userInfo.token));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      setEmailError(false);\r\n      setPasswordError(false);\r\n      setOpen(true);\r\n    } else if (error) {\r\n      const { validationErrors } = error;\r\n      if (validationErrors) {\r\n        const emailDataError = validationErrors.find(\r\n          (i: any) => i.param === \"email\"\r\n        );\r\n        const passwordDataError = validationErrors.find(\r\n          (i: any) => i.param === \"password\"\r\n        );\r\n\r\n        if (emailDataError) {\r\n          setEmailError(true);\r\n          setEmailHelpText(emailDataError.msg);\r\n        } else {\r\n          setEmailError(false);\r\n        }\r\n        if (passwordDataError) {\r\n          setPasswordError(true);\r\n          setPasswordHelpText(passwordDataError.msg);\r\n        } else {\r\n          setPasswordError(false);\r\n        }\r\n      }\r\n    }\r\n  }, [userInfo, error]);\r\n\r\n  const submitHandle = async (e: any) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <form onSubmit={submitHandle} noValidate autoComplete=\"off\">\r\n        <Grid container justify=\"center\" alignItems=\"center\">\r\n          <Grid\r\n            item\r\n            container\r\n            justify=\"center\"\r\n            className={classes.input}\r\n            alignItems=\"center\"\r\n          >\r\n            <FormControl style={{ width: 400 }}>\r\n              <InputLabel htmlFor=\"email\">Email </InputLabel>\r\n              <Input\r\n                id=\"email\"\r\n                aria-describedby=\"email-address\"\r\n                type=\"text\"\r\n                value={email}\r\n                error={emailError}\r\n                onChange={(e: any) => setEmail(e.target.value.trim())}\r\n              />\r\n              {emailError && (\r\n                <FormHelperText\r\n                  id=\"email-helper-text\"\r\n                  className={classes.error}\r\n                >\r\n                  {emailHelpText}\r\n                </FormHelperText>\r\n              )}\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            justify=\"center\"\r\n            className={classes.input}\r\n            alignItems=\"center\"\r\n          >\r\n            <FormControl style={{ width: 400 }}>\r\n              <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n              <Input\r\n                id=\"password\"\r\n                aria-describedby=\"password\"\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                value={password}\r\n                error={passwordError}\r\n                onChange={(e: any) => setPassword(e.target.value.trim())}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={() => setShowPassword(!showPassword)}\r\n                      edge=\"end\"\r\n                    >\r\n                      {showPassword ? (\r\n                        <VisibilityIcon />\r\n                      ) : (\r\n                        <VisibilityOffIcon />\r\n                      )}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n\r\n              {passwordError && (\r\n                <FormHelperText\r\n                  id=\"password-helper-text\"\r\n                  className={classes.error}\r\n                >\r\n                  {passwordHelpText}\r\n                </FormHelperText>\r\n              )}\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item style={{ width: 300 }}>\r\n            <Grid item container justify=\"space-between\">\r\n              <Grid item>\r\n                <Typography>Quên mật khẩu</Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  disabled={loading}\r\n                >\r\n                  Đăng nhập\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      <Modal\r\n        handleOpenModal={handleOpenModal}\r\n        handleCloseModal={handleCloseModal}\r\n        text={\"Bạn đã đăng nhập thành công\"}\r\n        open={open}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","D:\\New folder\\react project\\tekshop\\frontend\\src\\store\\actions\\userAction.ts",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\Register.tsx",["134","135","136","137","138","139","140","141","142"],"D:\\New folder\\react project\\tekshop\\frontend\\src\\components\\Modal.tsx",[],"D:\\New folder\\react project\\tekshop\\frontend\\src\\screens\\Profile.tsx",["143","144","145","146","147"],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":6,"column":8,"nodeType":"154","messageId":"155","endLine":6,"endColumn":15},{"ruleId":"152","severity":1,"message":"156","line":109,"column":9,"nodeType":"154","messageId":"155","endLine":109,"endColumn":17},{"ruleId":"148","replacedBy":"157"},{"ruleId":"150","replacedBy":"158"},{"ruleId":"152","severity":1,"message":"159","line":1,"column":40,"nodeType":"154","messageId":"155","endLine":1,"endColumn":45},{"ruleId":"152","severity":1,"message":"160","line":2,"column":32,"nodeType":"154","messageId":"155","endLine":2,"endColumn":44},{"ruleId":"152","severity":1,"message":"161","line":4,"column":10,"nodeType":"154","messageId":"155","endLine":4,"endColumn":20},{"ruleId":"152","severity":1,"message":"162","line":4,"column":40,"nodeType":"154","messageId":"155","endLine":4,"endColumn":47},{"ruleId":"152","severity":1,"message":"163","line":49,"column":9,"nodeType":"154","messageId":"155","endLine":49,"endColumn":14},{"ruleId":"152","severity":1,"message":"164","line":32,"column":10,"nodeType":"154","messageId":"155","endLine":32,"endColumn":20},{"ruleId":"152","severity":1,"message":"165","line":111,"column":37,"nodeType":"154","messageId":"155","endLine":111,"endColumn":45},{"ruleId":"152","severity":1,"message":"166","line":114,"column":9,"nodeType":"154","messageId":"155","endLine":114,"endColumn":18},{"ruleId":"152","severity":1,"message":"167","line":124,"column":5,"nodeType":"154","messageId":"155","endLine":124,"endColumn":12},{"ruleId":"152","severity":1,"message":"168","line":125,"column":5,"nodeType":"154","messageId":"155","endLine":125,"endColumn":10},{"ruleId":"169","severity":1,"message":"170","line":183,"column":6,"nodeType":"171","endLine":183,"endColumn":33,"suggestions":"172"},{"ruleId":"152","severity":1,"message":"173","line":7,"column":10,"nodeType":"154","messageId":"155","endLine":7,"endColumn":17},{"ruleId":"152","severity":1,"message":"174","line":21,"column":7,"nodeType":"154","messageId":"155","endLine":21,"endColumn":19},{"ruleId":"152","severity":1,"message":"175","line":3,"column":10,"nodeType":"154","messageId":"155","endLine":3,"endColumn":14},{"ruleId":"152","severity":1,"message":"176","line":4,"column":22,"nodeType":"154","messageId":"155","endLine":4,"endColumn":30},{"ruleId":"152","severity":1,"message":"173","line":7,"column":10,"nodeType":"154","messageId":"155","endLine":7,"endColumn":17},{"ruleId":"152","severity":1,"message":"177","line":13,"column":3,"nodeType":"154","messageId":"155","endLine":13,"endColumn":9},{"ruleId":"152","severity":1,"message":"178","line":41,"column":10,"nodeType":"154","messageId":"155","endLine":41,"endColumn":20},{"ruleId":"152","severity":1,"message":"179","line":41,"column":22,"nodeType":"154","messageId":"155","endLine":41,"endColumn":35},{"ruleId":"152","severity":1,"message":"176","line":4,"column":22,"nodeType":"154","messageId":"155","endLine":4,"endColumn":30},{"ruleId":"152","severity":1,"message":"160","line":4,"column":32,"nodeType":"154","messageId":"155","endLine":4,"endColumn":44},{"ruleId":"152","severity":1,"message":"180","line":1,"column":38,"nodeType":"154","messageId":"155","endLine":1,"endColumn":44},{"ruleId":"152","severity":1,"message":"175","line":5,"column":10,"nodeType":"154","messageId":"155","endLine":5,"endColumn":14},{"ruleId":"152","severity":1,"message":"181","line":5,"column":16,"nodeType":"154","messageId":"155","endLine":5,"endColumn":34},{"ruleId":"152","severity":1,"message":"176","line":6,"column":22,"nodeType":"154","messageId":"155","endLine":6,"endColumn":30},{"ruleId":"152","severity":1,"message":"160","line":6,"column":32,"nodeType":"154","messageId":"155","endLine":6,"endColumn":44},{"ruleId":"152","severity":1,"message":"182","line":8,"column":20,"nodeType":"154","messageId":"155","endLine":8,"endColumn":25},{"ruleId":"152","severity":1,"message":"183","line":83,"column":9,"nodeType":"154","messageId":"155","endLine":83,"endColumn":18},{"ruleId":"152","severity":1,"message":"184","line":95,"column":9,"nodeType":"154","messageId":"155","endLine":95,"endColumn":18},{"ruleId":"152","severity":1,"message":"185","line":97,"column":11,"nodeType":"154","messageId":"155","endLine":97,"endColumn":19},{"ruleId":"152","severity":1,"message":"186","line":3,"column":8,"nodeType":"154","messageId":"155","endLine":3,"endColumn":13},{"ruleId":"152","severity":1,"message":"160","line":4,"column":32,"nodeType":"154","messageId":"155","endLine":4,"endColumn":44},{"ruleId":"152","severity":1,"message":"187","line":11,"column":3,"nodeType":"154","messageId":"155","endLine":11,"endColumn":14},{"ruleId":"152","severity":1,"message":"188","line":14,"column":3,"nodeType":"154","messageId":"155","endLine":14,"endColumn":17},{"ruleId":"152","severity":1,"message":"189","line":15,"column":3,"nodeType":"154","messageId":"155","endLine":15,"endColumn":17},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"@typescript-eslint/no-unused-vars","'Loading' is defined but never used.","Identifier","unusedVar","'userInfo' is assigned a value but never used.",["190"],["191"],"'Theme' is defined but never used.","'createStyles' is defined but never used.","'IconButton' is defined but never used.","'Toolbar' is defined but never used.","'theme' is assigned a value but never used.","'useHistory' is defined but never used.","'location' is assigned a value but never used.","'matchesMD' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setValue'. Either include it or remove the dependency array.","ArrayExpression",["192"],"'getCart' is defined but never used.","'initialState' is assigned a value but never used.","'Link' is defined but never used.","'useTheme' is defined but never used.","'Select' is defined but never used.","'productQty' is assigned a value but never used.","'setProductQty' is assigned a value but never used.","'useRef' is defined but never used.","'RouteChildrenProps' is defined but never used.","'login' is defined but never used.","'fileField' is assigned a value but never used.","'getBase64' is assigned a value but never used.","'fileInfo' is defined but never used.","'Modal' is defined but never used.","'FormControl' is defined but never used.","'FormHelperText' is defined but never used.","'InputAdornment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"193","fix":"194"},"Update the dependencies array to be: [value, matchesSM, history, setValue]",{"range":"195","text":"196"},[4696,4723],"[value, matchesSM, history, setValue]"]